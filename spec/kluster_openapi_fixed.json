{
  "openapi": "3.0.0",
  "info": {
    "title": "Get started with the kluster.ai API",
    "description": "The kluster.ai API provides a simple and scalable way to work with Large Language Models (LLMs). It's compatible with OpenAI\u2019s API and SDKs, allowing easy integration into your existing workflows with minimal code changes.\n\nVisit the [Get an API key](https://docs.kluster.ai/get-started/get-api-key/) page to create an account and generate your API key.\n\nTo use the API playground, enter your API key under **Authentication** in the **Bearer token** field on the right side of the page.\n\nYou're now ready to make test API calls. Choose an endpoint and click **Test Request** to send a request. Your API key will be automatically included\u2014just update the parameters as needed and submit.\n\nNote that the API playground does not store your API key between sessions. Be mindful of request limits based on your plan tier when testing.",
    "version": "0.1.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {}
  },
  "paths": {
    "/v1/batches": {
      "post": {
        "tags": [
          "Batch"
        ],
        "description": "Schedule a new batch operation for the user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "input_file_id": {
                    "minLength": 1,
                    "maxLength": 256,
                    "description": "ID of the input file to be processed.",
                    "type": "string",
                    "example": "myfile-abc123"
                  },
                  "endpoint": {
                    "description": "API endpoint for batch processing.",
                    "type": "string",
                    "example": "/v1/batches"
                  },
                  "completion_window": {
                    "description": "Allowed completion window duration.",
                    "example": "24h",
                    "type": "string",
                    "enum": [
                      "asap",
                      "24h",
                      "48h",
                      "72h"
                    ]
                  },
                  "metadata": {
                    "additionalProperties": {},
                    "type": "object",
                    "properties": {
                      "@kluster.ai": {
                        "type": "object",
                        "properties": {
                          "greedy": {
                            "description": "If true, the batch process aggressively processes requests without delay.",
                            "type": "boolean"
                          },
                          "strict_completion_window": {
                            "description": "If true, enforces strict adherence to the completion window.",
                            "type": "boolean"
                          },
                          "remove_input_after_processing": {
                            "description": "If true, removes input file as soon as processing is finished.",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "input_file_id",
                  "endpoint",
                  "completion_window"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the batch job.",
                      "type": "string"
                    },
                    "object": {
                      "description": "Indicates this is a batch job object.",
                      "type": "string",
                      "enum": [
                        "batch"
                      ],
                      "example": "batch"
                    },
                    "endpoint": {
                      "description": "API endpoint for batch job processing.",
                      "type": "string",
                      "example": "/v1/batches"
                    },
                    "errors": {
                      "description": "List of error messages, if any.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Fine Tune job doesn't exist"
                      ]
                    },
                    "input_file_id": {
                      "description": "ID of the input file used in the batch job.",
                      "type": "string",
                      "example": "myfile_abc123"
                    },
                    "completion_window": {
                      "description": "Allowed completion window duration.",
                      "example": "24h",
                      "type": "string",
                      "enum": [
                        "asap",
                        "1h",
                        "3h",
                        "6h",
                        "12h",
                        "24h",
                        "48h",
                        "72h"
                      ]
                    },
                    "status": {
                      "description": "Current processing status of the batch job.",
                      "type": "string",
                      "example": "completed"
                    },
                    "output_file_id": {
                      "description": "ID of the output file, if applicable.",
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": "myoutput_abc123"
                    },
                    "error_file_id": {
                      "description": "ID of the error log file, if applicable.",
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": "myfile_abc123"
                    },
                    "created_at": {
                      "description": "Timestamp indicating when the batch job was created.",
                      "type": "integer",
                      "example": 1711240000
                    },
                    "in_progress_at": {
                      "description": "Timestamp when processing began, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240010
                    },
                    "expires_at": {
                      "description": "Timestamp when the batch job expires.",
                      "type": "integer",
                      "example": 1711240200
                    },
                    "finalizing_at": {
                      "description": "Timestamp when the batch job entered finalization, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240120
                    },
                    "completed_at": {
                      "description": "Timestamp when the batch job was completed, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240128
                    },
                    "failed_at": {
                      "description": "Timestamp when the batch job failed, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240000
                    },
                    "expired_at": {
                      "description": "Timestamp when the batch job expired, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240000
                    },
                    "cancelling_at": {
                      "description": "Timestamp when the batch job entered cancellation, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240000
                    },
                    "cancelled_at": {
                      "description": "Timestamp when the batch job was cancelled, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240000
                    },
                    "request_counts": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "description": "Total number of requests in the batch job.",
                          "type": "integer",
                          "example": 4
                        },
                        "completed": {
                          "description": "Number of successfully completed requests.",
                          "type": "integer",
                          "example": 3
                        },
                        "failed": {
                          "description": "Number of failed requests.",
                          "type": "integer",
                          "example": 1
                        }
                      },
                      "required": [
                        "total",
                        "completed",
                        "failed"
                      ]
                    },
                    "metadata": {
                      "description": "Additional metadata associated with the batch job.",
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "endpoint",
                    "input_file_id",
                    "completion_window",
                    "status",
                    "created_at",
                    "expires_at",
                    "request_counts"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Batch"
        ],
        "description": "Retrieves all batch operations.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "batch_abc123",
            "in": "query",
            "name": "after",
            "required": false,
            "description": "Pagination cursor for retrieving batch jobs after a specific ID."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "pre_schedule",
                "in_progress",
                "validating",
                "finalizing",
                "cancelling",
                "cancelled",
                "completed",
                "failed"
              ]
            },
            "example": "completed",
            "in": "query",
            "name": "status",
            "required": false,
            "description": "Filter by batch job processing state."
          },
          {
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "type": "number"
            },
            "example": 25,
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of batch jobs to return in a single response."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "in": "query",
            "name": "uiRequest",
            "required": false,
            "description": "Indicates if the request is initiated from a UI component."
          },
          {
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "type": "number"
            },
            "example": 2,
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Page number to retrieve in paginated responses."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "Indicates this is a list of batch jobs.",
                      "type": "string",
                      "enum": [
                        "list"
                      ],
                      "example": "list"
                    },
                    "data": {
                      "description": "Array of batch job objects.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier for the batch job.",
                            "type": "string"
                          },
                          "object": {
                            "description": "Indicates this is a batch job object.",
                            "type": "string",
                            "enum": [
                              "batch"
                            ],
                            "example": "batch"
                          },
                          "endpoint": {
                            "description": "API endpoint for batch job processing.",
                            "type": "string",
                            "example": "/v1/batches"
                          },
                          "errors": {
                            "description": "List of error messages, if any.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Fine Tune job doesn't exist"
                            ]
                          },
                          "input_file_id": {
                            "description": "ID of the input file used in the batch job.",
                            "type": "string",
                            "example": "myfile_abc123"
                          },
                          "completion_window": {
                            "description": "Allowed completion window duration.",
                            "example": "24h",
                            "type": "string",
                            "enum": [
                              "asap",
                              "1h",
                              "3h",
                              "6h",
                              "12h",
                              "24h",
                              "48h",
                              "72h"
                            ]
                          },
                          "status": {
                            "description": "Current processing status of the batch job.",
                            "type": "string",
                            "example": "completed"
                          },
                          "output_file_id": {
                            "description": "ID of the output file, if applicable.",
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": "myoutput_abc123"
                          },
                          "error_file_id": {
                            "description": "ID of the error log file, if applicable.",
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": "myfile_abc123"
                          },
                          "created_at": {
                            "description": "Timestamp indicating when the batch job was created.",
                            "type": "integer",
                            "example": 1711240000
                          },
                          "in_progress_at": {
                            "description": "Timestamp when processing began, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240010
                          },
                          "expires_at": {
                            "description": "Timestamp when the batch job expires.",
                            "type": "integer",
                            "example": 1711240200
                          },
                          "finalizing_at": {
                            "description": "Timestamp when the batch job entered finalization, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240120
                          },
                          "completed_at": {
                            "description": "Timestamp when the batch job was completed, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240128
                          },
                          "failed_at": {
                            "description": "Timestamp when the batch job failed, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240000
                          },
                          "expired_at": {
                            "description": "Timestamp when the batch job expired, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240000
                          },
                          "cancelling_at": {
                            "description": "Timestamp when the batch job entered cancellation, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240000
                          },
                          "cancelled_at": {
                            "description": "Timestamp when the batch job was cancelled, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240000
                          },
                          "request_counts": {
                            "type": "object",
                            "properties": {
                              "total": {
                                "description": "Total number of requests in the batch job.",
                                "type": "integer",
                                "example": 4
                              },
                              "completed": {
                                "description": "Number of successfully completed requests.",
                                "type": "integer",
                                "example": 3
                              },
                              "failed": {
                                "description": "Number of failed requests.",
                                "type": "integer",
                                "example": 1
                              }
                            },
                            "required": [
                              "total",
                              "completed",
                              "failed"
                            ]
                          },
                          "metadata": {
                            "description": "Additional metadata associated with the batch job.",
                            "type": "object",
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "endpoint",
                          "input_file_id",
                          "completion_window",
                          "status",
                          "created_at",
                          "expires_at",
                          "request_counts"
                        ]
                      }
                    },
                    "first_id": {
                      "description": "ID of the first batch job in the list, if paginated.",
                      "type": "string",
                      "example": "batch_abc123"
                    },
                    "last_id": {
                      "description": "ID of the last batch job in the list, if paginated.",
                      "type": "string",
                      "example": "batch_xyz999"
                    },
                    "has_more": {
                      "description": "Indicates whether more batch jobs are available.",
                      "type": "boolean",
                      "example": true
                    },
                    "page_count": {
                      "description": "Total number of pages available in the paginated response.",
                      "type": "number",
                      "example": 2
                    }
                  },
                  "required": [
                    "object",
                    "data",
                    "has_more"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/batches/{batchId}": {
      "get": {
        "tags": [
          "Batch"
        ],
        "description": "Retrieves a single batch operation.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "format": "object-id",
                  "description": "Id of a batch job",
                  "examples": [
                    "batch_abc123"
                  ],
                  "type": "string"
                },
                {}
              ]
            },
            "example": "batch_abc123",
            "in": "path",
            "name": "batchId",
            "required": true,
            "description": "Id of a batch job"
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the batch job.",
                      "type": "string"
                    },
                    "object": {
                      "description": "Indicates this is a batch job object.",
                      "type": "string",
                      "enum": [
                        "batch"
                      ],
                      "example": "batch"
                    },
                    "endpoint": {
                      "description": "API endpoint for batch job processing.",
                      "type": "string",
                      "example": "/v1/batches"
                    },
                    "errors": {
                      "description": "List of error messages, if any.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Fine Tune job doesn't exist"
                      ]
                    },
                    "input_file_id": {
                      "description": "ID of the input file used in the batch job.",
                      "type": "string",
                      "example": "myfile_abc123"
                    },
                    "completion_window": {
                      "description": "Allowed completion window duration.",
                      "example": "24h",
                      "type": "string",
                      "enum": [
                        "asap",
                        "1h",
                        "3h",
                        "6h",
                        "12h",
                        "24h",
                        "48h",
                        "72h"
                      ]
                    },
                    "status": {
                      "description": "Current processing status of the batch job.",
                      "type": "string",
                      "example": "completed"
                    },
                    "output_file_id": {
                      "description": "ID of the output file, if applicable.",
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": "myoutput_abc123"
                    },
                    "error_file_id": {
                      "description": "ID of the error log file, if applicable.",
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": "myfile_abc123"
                    },
                    "created_at": {
                      "description": "Timestamp indicating when the batch job was created.",
                      "type": "integer",
                      "example": 1711240000
                    },
                    "in_progress_at": {
                      "description": "Timestamp when processing began, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240010
                    },
                    "expires_at": {
                      "description": "Timestamp when the batch job expires.",
                      "type": "integer",
                      "example": 1711240200
                    },
                    "finalizing_at": {
                      "description": "Timestamp when the batch job entered finalization, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240120
                    },
                    "completed_at": {
                      "description": "Timestamp when the batch job was completed, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240128
                    },
                    "failed_at": {
                      "description": "Timestamp when the batch job failed, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240000
                    },
                    "expired_at": {
                      "description": "Timestamp when the batch job expired, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240000
                    },
                    "cancelling_at": {
                      "description": "Timestamp when the batch job entered cancellation, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240000
                    },
                    "cancelled_at": {
                      "description": "Timestamp when the batch job was cancelled, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240000
                    },
                    "request_counts": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "description": "Total number of requests in the batch job.",
                          "type": "integer",
                          "example": 4
                        },
                        "completed": {
                          "description": "Number of successfully completed requests.",
                          "type": "integer",
                          "example": 3
                        },
                        "failed": {
                          "description": "Number of failed requests.",
                          "type": "integer",
                          "example": 1
                        }
                      },
                      "required": [
                        "total",
                        "completed",
                        "failed"
                      ]
                    },
                    "metadata": {
                      "description": "Additional metadata associated with the batch job.",
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "endpoint",
                    "input_file_id",
                    "completion_window",
                    "status",
                    "created_at",
                    "expires_at",
                    "request_counts"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/async-batches": {
      "get": {
        "tags": [
          "Batch"
        ],
        "description": "Redirects to the standard batches endpoint",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "batch_abc123",
            "in": "query",
            "name": "after",
            "required": false,
            "description": "Pagination cursor for retrieving batch jobs after a specific ID."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "pre_schedule",
                "in_progress",
                "validating",
                "finalizing",
                "cancelling",
                "cancelled",
                "completed",
                "failed"
              ]
            },
            "example": "completed",
            "in": "query",
            "name": "status",
            "required": false,
            "description": "Filter by batch job processing state."
          },
          {
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "type": "number"
            },
            "example": 25,
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of batch jobs to return in a single response."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "in": "query",
            "name": "uiRequest",
            "required": false,
            "description": "Indicates if the request is initiated from a UI component."
          },
          {
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "type": "number"
            },
            "example": 2,
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Page number to retrieve in paginated responses."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "Indicates this is a list of batch jobs.",
                      "type": "string",
                      "enum": [
                        "list"
                      ],
                      "example": "list"
                    },
                    "data": {
                      "description": "Array of batch job objects.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier for the batch job.",
                            "type": "string"
                          },
                          "object": {
                            "description": "Indicates this is a batch job object.",
                            "type": "string",
                            "enum": [
                              "batch"
                            ],
                            "example": "batch"
                          },
                          "endpoint": {
                            "description": "API endpoint for batch job processing.",
                            "type": "string",
                            "example": "/v1/batches"
                          },
                          "errors": {
                            "description": "List of error messages, if any.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Fine Tune job doesn't exist"
                            ]
                          },
                          "input_file_id": {
                            "description": "ID of the input file used in the batch job.",
                            "type": "string",
                            "example": "myfile_abc123"
                          },
                          "completion_window": {
                            "description": "Allowed completion window duration.",
                            "example": "24h",
                            "type": "string",
                            "enum": [
                              "asap",
                              "1h",
                              "3h",
                              "6h",
                              "12h",
                              "24h",
                              "48h",
                              "72h"
                            ]
                          },
                          "status": {
                            "description": "Current processing status of the batch job.",
                            "type": "string",
                            "example": "completed"
                          },
                          "output_file_id": {
                            "description": "ID of the output file, if applicable.",
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": "myoutput_abc123"
                          },
                          "error_file_id": {
                            "description": "ID of the error log file, if applicable.",
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": "myfile_abc123"
                          },
                          "created_at": {
                            "description": "Timestamp indicating when the batch job was created.",
                            "type": "integer",
                            "example": 1711240000
                          },
                          "in_progress_at": {
                            "description": "Timestamp when processing began, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240010
                          },
                          "expires_at": {
                            "description": "Timestamp when the batch job expires.",
                            "type": "integer",
                            "example": 1711240200
                          },
                          "finalizing_at": {
                            "description": "Timestamp when the batch job entered finalization, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240120
                          },
                          "completed_at": {
                            "description": "Timestamp when the batch job was completed, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240128
                          },
                          "failed_at": {
                            "description": "Timestamp when the batch job failed, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240000
                          },
                          "expired_at": {
                            "description": "Timestamp when the batch job expired, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240000
                          },
                          "cancelling_at": {
                            "description": "Timestamp when the batch job entered cancellation, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240000
                          },
                          "cancelled_at": {
                            "description": "Timestamp when the batch job was cancelled, if applicable.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "example": 1711240000
                          },
                          "request_counts": {
                            "type": "object",
                            "properties": {
                              "total": {
                                "description": "Total number of requests in the batch job.",
                                "type": "integer",
                                "example": 4
                              },
                              "completed": {
                                "description": "Number of successfully completed requests.",
                                "type": "integer",
                                "example": 3
                              },
                              "failed": {
                                "description": "Number of failed requests.",
                                "type": "integer",
                                "example": 1
                              }
                            },
                            "required": [
                              "total",
                              "completed",
                              "failed"
                            ]
                          },
                          "metadata": {
                            "description": "Additional metadata associated with the batch job.",
                            "type": "object",
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "endpoint",
                          "input_file_id",
                          "completion_window",
                          "status",
                          "created_at",
                          "expires_at",
                          "request_counts"
                        ]
                      }
                    },
                    "first_id": {
                      "description": "ID of the first batch job in the list, if paginated.",
                      "type": "string",
                      "example": "batch_abc123"
                    },
                    "last_id": {
                      "description": "ID of the last batch job in the list, if paginated.",
                      "type": "string",
                      "example": "batch_xyz999"
                    },
                    "has_more": {
                      "description": "Indicates whether more batch jobs are available.",
                      "type": "boolean",
                      "example": true
                    },
                    "page_count": {
                      "description": "Total number of pages available in the paginated response.",
                      "type": "number",
                      "example": 2
                    }
                  },
                  "required": [
                    "object",
                    "data",
                    "has_more"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/batches/{batchId}/cancel": {
      "post": {
        "tags": [
          "Batch"
        ],
        "description": "Cancel a batch operation",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "format": "object-id",
                  "description": "ID of the batch operation",
                  "examples": [
                    "mybatch_abc123"
                  ],
                  "type": "string"
                },
                {}
              ]
            },
            "example": "mybatch_abc123",
            "in": "path",
            "name": "batchId",
            "required": true,
            "description": "ID of the batch operation"
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the batch job.",
                      "type": "string"
                    },
                    "object": {
                      "description": "Indicates this is a batch job object.",
                      "type": "string",
                      "enum": [
                        "batch"
                      ],
                      "example": "batch"
                    },
                    "endpoint": {
                      "description": "API endpoint for batch job processing.",
                      "type": "string",
                      "example": "/v1/batches"
                    },
                    "errors": {
                      "description": "List of error messages, if any.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Fine Tune job doesn't exist"
                      ]
                    },
                    "input_file_id": {
                      "description": "ID of the input file used in the batch job.",
                      "type": "string",
                      "example": "myfile_abc123"
                    },
                    "completion_window": {
                      "description": "Allowed completion window duration.",
                      "example": "24h",
                      "type": "string",
                      "enum": [
                        "asap",
                        "1h",
                        "3h",
                        "6h",
                        "12h",
                        "24h",
                        "48h",
                        "72h"
                      ]
                    },
                    "status": {
                      "description": "Current processing status of the batch job.",
                      "type": "string",
                      "example": "completed"
                    },
                    "output_file_id": {
                      "description": "ID of the output file, if applicable.",
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": "myoutput_abc123"
                    },
                    "error_file_id": {
                      "description": "ID of the error log file, if applicable.",
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": "myfile_abc123"
                    },
                    "created_at": {
                      "description": "Timestamp indicating when the batch job was created.",
                      "type": "integer",
                      "example": 1711240000
                    },
                    "in_progress_at": {
                      "description": "Timestamp when processing began, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240010
                    },
                    "expires_at": {
                      "description": "Timestamp when the batch job expires.",
                      "type": "integer",
                      "example": 1711240200
                    },
                    "finalizing_at": {
                      "description": "Timestamp when the batch job entered finalization, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240120
                    },
                    "completed_at": {
                      "description": "Timestamp when the batch job was completed, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240128
                    },
                    "failed_at": {
                      "description": "Timestamp when the batch job failed, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240000
                    },
                    "expired_at": {
                      "description": "Timestamp when the batch job expired, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240000
                    },
                    "cancelling_at": {
                      "description": "Timestamp when the batch job entered cancellation, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240000
                    },
                    "cancelled_at": {
                      "description": "Timestamp when the batch job was cancelled, if applicable.",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 1711240000
                    },
                    "request_counts": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "description": "Total number of requests in the batch job.",
                          "type": "integer",
                          "example": 4
                        },
                        "completed": {
                          "description": "Number of successfully completed requests.",
                          "type": "integer",
                          "example": 3
                        },
                        "failed": {
                          "description": "Number of failed requests.",
                          "type": "integer",
                          "example": 1
                        }
                      },
                      "required": [
                        "total",
                        "completed",
                        "failed"
                      ]
                    },
                    "metadata": {
                      "description": "Additional metadata associated with the batch job.",
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "endpoint",
                    "input_file_id",
                    "completion_window",
                    "status",
                    "created_at",
                    "expires_at",
                    "request_counts"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/batches/{batchId}/delete": {
      "delete": {
        "tags": [
          "Batch"
        ],
        "description": "Delete a batch operation and optionally its files",
        "parameters": [
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "deleteFiles",
            "required": false,
            "description": "Whether to delete associated files"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "format": "object-id",
                  "description": "ID of the batch operation",
                  "examples": [
                    "mybatch_abc123"
                  ],
                  "type": "string"
                },
                {}
              ]
            },
            "example": "mybatch_abc123",
            "in": "path",
            "name": "batchId",
            "required": true,
            "description": "ID of the batch operation"
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/embeddings": {
      "post": {
        "tags": [
          "Embeddings"
        ],
        "description": "Creates an embedding vector representing the input text.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "input": {
                    "anyOf": [
                      {
                        "description": "Input text for the embedding.",
                        "minLength": 1,
                        "type": "string"
                      },
                      {
                        "description": "The array of integers that will be turned into an embedding.",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "description": "Input number for the embedding.",
                          "type": "integer"
                        }
                      },
                      {
                        "description": "The array of arrays containing integers that will be turned into an embedding.",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "Input number for the embedding.",
                            "type": "integer"
                          }
                        }
                      },
                      {
                        "description": "The array of strings that will be turned into an embedding.",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "description": "Input text for the embedding.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    ]
                  },
                  "model": {
                    "description": "Model name",
                    "type": "string"
                  },
                  "dimensions": {
                    "anyOf": [
                      {
                        "description": "The number of dimensions the resulting output embeddings should have",
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "encoding_format": {
                    "anyOf": [
                      {
                        "description": "The format to return the embeddings in.",
                        "type": "string",
                        "enum": [
                          "float",
                          "base64"
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "input",
                  "model"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "List of objects",
                      "type": "string",
                      "enum": [
                        "list"
                      ]
                    },
                    "created": {
                      "description": "Timestamp when embedding created",
                      "type": "number"
                    },
                    "model": {
                      "description": "Model name",
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "object": {
                            "description": "The object type, which is always \"embedding\".",
                            "type": "string",
                            "enum": [
                              "embedding"
                            ]
                          },
                          "index": {
                            "description": "The index of the embedding in the list of embeddings.",
                            "type": "number"
                          },
                          "embedding": {
                            "anyOf": [
                              {
                                "description": "The embedding vector, which is a list of floats.",
                                "type": "array",
                                "items": {
                                  "type": "number"
                                }
                              },
                              {
                                "description": "Base64 vector representation of the embedding.",
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "required": [
                          "object",
                          "index",
                          "embedding"
                        ]
                      }
                    },
                    "usage": {
                      "type": "object",
                      "properties": {
                        "prompt_tokens": {
                          "description": "Prompt tokens for the embedding.",
                          "type": "number"
                        },
                        "total_tokens": {
                          "description": "Total tokens for the embedding.",
                          "type": "number"
                        }
                      },
                      "required": [
                        "prompt_tokens",
                        "total_tokens"
                      ]
                    }
                  },
                  "required": [
                    "object",
                    "created",
                    "model",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/files": {
      "post": {
        "tags": [
          "Files"
        ],
        "description": "Uploads a file.",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the file.",
                      "type": "string"
                    },
                    "object": {
                      "description": "Indicates this is a file object.",
                      "type": "string"
                    },
                    "bytes": {
                      "description": "Size of the file in bytes.",
                      "type": "number"
                    },
                    "created_at": {
                      "description": "Timestamp when the file was created.",
                      "type": "number"
                    },
                    "filename": {
                      "description": "Original name of the uploaded file.",
                      "type": "string"
                    },
                    "purpose": {
                      "description": "Purpose of the file within the system.",
                      "type": "string",
                      "enum": [
                        "assistants",
                        "vision",
                        "batch",
                        "batch_output",
                        "fine-tune",
                        "fine-tune-results"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "created_at",
                    "filename",
                    "purpose"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Files"
        ],
        "description": "Retrieves all files.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "assistants",
                "vision",
                "batch",
                "batch_output",
                "fine-tune",
                "fine-tune-results"
              ]
            },
            "example": "assistants",
            "in": "query",
            "name": "purpose",
            "required": false,
            "description": "Filter files by their purpose."
          },
          {
            "schema": {
              "minimum": 1,
              "maximum": 10000,
              "type": "number"
            },
            "example": 100,
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of files to return in a single response."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "example": "desc",
            "in": "query",
            "name": "order",
            "required": false,
            "description": "Sort order for file retrieval ('asc' or 'desc')."
          },
          {
            "schema": {
              "type": "string"
            },
            "example": "file_abc123",
            "in": "query",
            "name": "after",
            "required": false,
            "description": "Pagination cursor for retrieving files after a specific file ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing a list of files.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response object containing a list of files.",
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Array of file objects.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier for the file.",
                            "type": "string"
                          },
                          "object": {
                            "description": "Indicates this is a file object.",
                            "type": "string"
                          },
                          "bytes": {
                            "description": "Size of the file in bytes.",
                            "type": "number"
                          },
                          "created_at": {
                            "description": "Timestamp when the file was created.",
                            "type": "number"
                          },
                          "filename": {
                            "description": "Original name of the uploaded file.",
                            "type": "string"
                          },
                          "purpose": {
                            "description": "Purpose of the file within the system.",
                            "type": "string",
                            "enum": [
                              "assistants",
                              "vision",
                              "batch",
                              "batch_output",
                              "fine-tune",
                              "fine-tune-results"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "created_at",
                          "filename",
                          "purpose"
                        ]
                      },
                      "example": [
                        {
                          "id": "file_abc123",
                          "object": "file",
                          "bytes": 349210,
                          "created_at": 1711234567,
                          "filename": "my-cool-image.png",
                          "purpose": "assistants"
                        }
                      ]
                    },
                    "object": {
                      "description": "Indicates this is a list response.",
                      "type": "string",
                      "enum": [
                        "list"
                      ],
                      "example": "list"
                    }
                  },
                  "required": [
                    "data",
                    "object"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "id": "file_abc123",
                      "object": "file",
                      "bytes": 349210,
                      "created_at": 1711234567,
                      "filename": "my-cool-image.png",
                      "purpose": "assistants"
                    },
                    {
                      "id": "file_xyz789",
                      "object": "file",
                      "bytes": 123456,
                      "created_at": 1712234567,
                      "filename": "data.csv",
                      "purpose": "batch"
                    }
                  ],
                  "object": "list"
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/{fileId}": {
      "get": {
        "tags": [
          "Files"
        ],
        "description": "Get file information.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "format": "object-id",
                  "description": "Unique identifier for the file.",
                  "examples": [
                    "myfile_123"
                  ],
                  "type": "string"
                },
                {}
              ]
            },
            "example": "myfile_123",
            "in": "path",
            "name": "fileId",
            "required": true,
            "description": "Unique identifier for the file."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Files"
        ],
        "description": "Removes file.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "format": "object-id",
                  "description": "Unique identifier for the file.",
                  "examples": [
                    "myfile_123"
                  ],
                  "type": "string"
                },
                {}
              ]
            },
            "example": "myfile_123",
            "in": "path",
            "name": "fileId",
            "required": true,
            "description": "Unique identifier for the file."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier of the file being deleted.",
                      "type": "string",
                      "example": "myfile_123"
                    },
                    "object": {
                      "description": "Indicates this is a file object.",
                      "type": "string",
                      "enum": [
                        "file"
                      ],
                      "example": "file"
                    },
                    "deleted": {
                      "description": "Indicates whether the file was successfully deleted.",
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "deleted"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/fine_tuning/jobs": {
      "post": {
        "tags": [
          "Fine tuning"
        ],
        "description": "Start fine tuning.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "training_file": {
                    "description": "ID of the training dataset file.",
                    "type": "string",
                    "example": "training_file123"
                  },
                  "validation_file": {
                    "description": "ID of the optional validation dataset file.",
                    "type": "string",
                    "example": "dataset_123"
                  },
                  "model": {
                    "description": "Base model to be fine-tuned.",
                    "type": "string",
                    "example": "meta-llama/Meta-Llama-3.1-8B-Instruct"
                  },
                  "labels": {
                    "description": "Custom labels for the fine-tuned model.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "production"
                    ]
                  },
                  "integrations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of integration (e.g., 'wandb').",
                          "type": "string",
                          "example": "wandb"
                        },
                        "wandb": {
                          "type": "object",
                          "properties": {
                            "project": {
                              "description": "WandB project name.",
                              "type": "string",
                              "example": "fine-tune-models"
                            },
                            "name": {
                              "description": "WandB experiment name.",
                              "type": "string",
                              "example": "experiment-2025-03-30"
                            },
                            "tags": {
                              "description": "List of tags associated with the integration.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "fine-tune"
                              ]
                            }
                          },
                          "required": [
                            "project",
                            "name",
                            "tags"
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "wandb"
                      ]
                    }
                  },
                  "hyperparameters": {
                    "type": "object",
                    "properties": {
                      "batch_size": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "auto"
                            ]
                          },
                          {
                            "minimum": 1,
                            "maximum": 64,
                            "description": "Number of training samples per batch. Defaults to 'auto'.",
                            "examples": [
                              16
                            ],
                            "type": "number"
                          }
                        ]
                      },
                      "learning_rate_multiplier": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "auto"
                            ]
                          },
                          {
                            "minimum": 0.0001,
                            "maximum": 10,
                            "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                            "examples": [
                              "auto"
                            ],
                            "type": "number"
                          }
                        ]
                      },
                      "n_epochs": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "auto"
                            ]
                          },
                          {
                            "minimum": 1,
                            "maximum": 100,
                            "description": "Number of training epochs. Defaults to '10'.",
                            "examples": [
                              10
                            ],
                            "type": "number"
                          }
                        ]
                      }
                    }
                  },
                  "user_provided_suffix": {
                    "minLength": 1,
                    "maxLength": 32,
                    "pattern": "^[a-zA-Z0-9_-]*$",
                    "description": "User-defined suffix for identifying the fine-tuned model.",
                    "type": "string",
                    "example": "my-custom-model"
                  },
                  "suffix": {
                    "minLength": 1,
                    "maxLength": 32,
                    "pattern": "^[a-zA-Z0-9_-]*$",
                    "description": "System-generated suffix for the fine-tuned model.",
                    "type": "string",
                    "example": "ft-20250330-abc123"
                  },
                  "method": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Fine-tuning method used.",
                        "example": "supervised",
                        "type": "string",
                        "enum": [
                          "supervised",
                          "dpo"
                        ]
                      },
                      "supervised": {
                        "type": "object",
                        "properties": {
                          "batch_size": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "auto"
                                ]
                              },
                              {
                                "minimum": 1,
                                "maximum": 64,
                                "description": "Number of training samples per batch. Defaults to 'auto'.",
                                "examples": [
                                  16
                                ],
                                "type": "number"
                              }
                            ]
                          },
                          "learning_rate_multiplier": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "auto"
                                ]
                              },
                              {
                                "minimum": 0.0001,
                                "maximum": 10,
                                "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                                "examples": [
                                  "auto"
                                ],
                                "type": "number"
                              }
                            ]
                          },
                          "n_epochs": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "auto"
                                ]
                              },
                              {
                                "minimum": 1,
                                "maximum": 100,
                                "description": "Number of training epochs. Defaults to '10'.",
                                "examples": [
                                  10
                                ],
                                "type": "number"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "required": [
                  "training_file",
                  "model"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "Indicates this is a fine-tuning job object.",
                      "type": "string",
                      "enum": [
                        "fine_tuning.job"
                      ],
                      "example": "fine_tuning.job"
                    },
                    "id": {
                      "description": "Unique identifier for the fine-tuning job.",
                      "type": "string",
                      "example": "ft_job_abc123"
                    },
                    "model": {
                      "description": "Base model that is being fine-tuned.",
                      "type": "string",
                      "example": "meta-llama/Meta-Llama-3.1-8B-Instruct"
                    },
                    "created_at": {
                      "description": "Timestamp when the fine-tuning job was created.",
                      "type": "integer",
                      "example": 1711234567
                    },
                    "finished_at": {
                      "description": "Timestamp when the fine-tuning job was completed.",
                      "type": "integer",
                      "example": 1711240000
                    },
                    "fine_tuned_model": {
                      "description": "ID of the fine-tuned model.",
                      "type": "string",
                      "example": "ft_model_xyz789"
                    },
                    "organization_id": {
                      "description": "ID of the organization that owns the fine-tuning job.",
                      "type": "string",
                      "example": "org_456def"
                    },
                    "result_files": {
                      "description": "List of output file IDs generated by the fine-tuning job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "file_abc123",
                        "file_def456"
                      ]
                    },
                    "status": {
                      "description": "Current processing status of the fine-tuning job.",
                      "example": "succeeded",
                      "type": "string",
                      "enum": [
                        "validating_files",
                        "queued",
                        "running",
                        "succeeded",
                        "failed",
                        "cancelled"
                      ]
                    },
                    "validation_file": {
                      "description": "ID of the validation dataset file.",
                      "type": "string",
                      "example": "file_valid123"
                    },
                    "training_file": {
                      "description": "ID of the training dataset file.",
                      "type": "string",
                      "example": "file_train123"
                    },
                    "labels": {
                      "description": "Custom labels for the fine-tuned model.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "production",
                        "test",
                        "experimental"
                      ]
                    },
                    "hyperparameters": {
                      "type": "object",
                      "properties": {
                        "batch_size": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 1,
                              "maximum": 64,
                              "description": "Number of training samples per batch. Defaults to 'auto'.",
                              "examples": [
                                16
                              ],
                              "type": "number"
                            }
                          ]
                        },
                        "learning_rate_multiplier": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 0.0001,
                              "maximum": 10,
                              "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                              "examples": [
                                "auto"
                              ],
                              "type": "number"
                            }
                          ]
                        },
                        "n_epochs": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 1,
                              "maximum": 100,
                              "description": "Number of training epochs. Defaults to '10'.",
                              "examples": [
                                10
                              ],
                              "type": "number"
                            }
                          ]
                        }
                      }
                    },
                    "method": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Fine-tuning method used ('supervised' or 'dpo').",
                          "example": "supervised",
                          "type": "string",
                          "enum": [
                            "supervised",
                            "dpo"
                          ]
                        },
                        "supervised": {
                          "type": "object",
                          "properties": {
                            "batch_size": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 1,
                                  "maximum": 64,
                                  "description": "Number of training samples per batch. Defaults to 'auto'.",
                                  "examples": [
                                    16
                                  ],
                                  "type": "number"
                                }
                              ]
                            },
                            "learning_rate_multiplier": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 0.0001,
                                  "maximum": 10,
                                  "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                                  "examples": [
                                    "auto"
                                  ],
                                  "type": "number"
                                }
                              ]
                            },
                            "n_epochs": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 1,
                                  "maximum": 100,
                                  "description": "Number of training epochs. Defaults to '10'.",
                                  "examples": [
                                    10
                                  ],
                                  "type": "number"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "trained_tokens": {
                      "description": "Total number of tokens processed during training.",
                      "type": "integer",
                      "example": 123456
                    },
                    "integrations": {
                      "description": "List of external integrations used during fine-tuning (e.g., Weights & Biases).",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Type of integration (e.g., 'wandb').",
                            "type": "string",
                            "example": "wandb"
                          },
                          "wandb": {
                            "type": "object",
                            "properties": {
                              "project": {
                                "description": "WandB project name.",
                                "type": "string",
                                "example": "fine-tune-models"
                              },
                              "name": {
                                "description": "WandB experiment name.",
                                "type": "string",
                                "example": "experiment-2025-03-30"
                              },
                              "tags": {
                                "description": "List of tags associated with the integration.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "fine-tune",
                                  "v1",
                                  "test-run"
                                ]
                              }
                            },
                            "required": [
                              "project",
                              "name",
                              "tags"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "wandb"
                        ]
                      }
                    },
                    "seed": {
                      "description": "Random seed used for training reproducibility.",
                      "type": "integer",
                      "example": 42
                    },
                    "estimated_finish": {
                      "description": "Estimated completion time for the fine-tuning job (Unix timestamp in seconds).",
                      "type": "integer",
                      "example": 1711245000
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Error code, if applicable.",
                          "type": "string",
                          "example": 10000
                        },
                        "param": {
                          "description": "Parameter that caused the error, if applicable.",
                          "type": "string",
                          "example": "ft_job_abc123"
                        },
                        "message": {
                          "description": "Detailed error message, if applicable.",
                          "type": "string",
                          "example": "Fine Tune job doesn't exist"
                        }
                      }
                    },
                    "user_provided_suffix": {
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "User-defined suffix for identifying the fine-tuned model.",
                      "type": "string",
                      "example": "my-custom-model"
                    },
                    "job_progress": {
                      "description": "Current fine tuning job progress data",
                      "type": "object",
                      "properties": {
                        "total_steps": {
                          "description": "Total steps in fine tune job",
                          "type": "number",
                          "example": 1000
                        },
                        "current_step": {
                          "description": "Current step in progress",
                          "type": "number",
                          "example": 450
                        }
                      },
                      "required": [
                        "total_steps"
                      ]
                    },
                    "metrics": {
                      "description": "Base metrics from the last checkpoint",
                      "type": "object",
                      "properties": {
                        "train_loss": {
                          "description": "Training loss of training",
                          "type": "number",
                          "example": 0.25
                        },
                        "valid_loss": {
                          "description": "Validation loss of training",
                          "type": "number",
                          "example": 0.3
                        },
                        "train_token_accuracy": {
                          "description": "Training token accuracy",
                          "type": "number",
                          "example": 0.95
                        },
                        "valid_token_accuracy": {
                          "description": "Validation token accuracy",
                          "type": "number",
                          "example": 0.92
                        }
                      }
                    }
                  },
                  "required": [
                    "object",
                    "id",
                    "model",
                    "created_at",
                    "result_files",
                    "status",
                    "training_file"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Fine tuning"
        ],
        "description": "List fine tuning jobs.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "myjob_123abc",
            "in": "query",
            "name": "after",
            "required": false,
            "description": "Pagination cursor for retrieving jobs created after a specific job ID."
          },
          {
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "type": "number"
            },
            "example": 20,
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of fine-tuning jobs to return in a single response."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "in": "query",
            "name": "uiRequest",
            "required": false,
            "description": "Indicates if the request originated from a user interface."
          },
          {
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "type": "number"
            },
            "example": 10,
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Page number to retrieve when paginating results."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "production",
              "test"
            ],
            "in": "query",
            "name": "labels",
            "required": false,
            "description": "Filter by multiple labels"
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of fine-tuning jobs.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated list of fine-tuning jobs.",
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "Indicates this is a list of fine-tuning jobs.",
                      "type": "string",
                      "enum": [
                        "list"
                      ],
                      "example": "list"
                    },
                    "data": {
                      "description": "List of fine-tuning job objects.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "object": {
                            "description": "Indicates this is a fine-tuning job object.",
                            "type": "string",
                            "enum": [
                              "fine_tuning.job"
                            ],
                            "example": "fine_tuning.job"
                          },
                          "id": {
                            "description": "Unique identifier for the fine-tuning job.",
                            "type": "string",
                            "example": "ft_job_abc123"
                          },
                          "model": {
                            "description": "Base model that is being fine-tuned.",
                            "type": "string",
                            "example": "meta-llama/Meta-Llama-3.1-8B-Instruct"
                          },
                          "created_at": {
                            "description": "Timestamp when the fine-tuning job was created.",
                            "type": "integer",
                            "example": 1711234567
                          },
                          "finished_at": {
                            "description": "Timestamp when the fine-tuning job was completed.",
                            "type": "integer",
                            "example": 1711240000
                          },
                          "fine_tuned_model": {
                            "description": "ID of the fine-tuned model.",
                            "type": "string",
                            "example": "ft_model_xyz789"
                          },
                          "organization_id": {
                            "description": "ID of the organization that owns the fine-tuning job.",
                            "type": "string",
                            "example": "org_456def"
                          },
                          "result_files": {
                            "description": "List of output file IDs generated by the fine-tuning job.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "file_abc123",
                              "file_def456"
                            ]
                          },
                          "status": {
                            "description": "Current processing status of the fine-tuning job.",
                            "example": "succeeded",
                            "type": "string",
                            "enum": [
                              "validating_files",
                              "queued",
                              "running",
                              "succeeded",
                              "failed",
                              "cancelled"
                            ]
                          },
                          "validation_file": {
                            "description": "ID of the validation dataset file.",
                            "type": "string",
                            "example": "file_valid123"
                          },
                          "training_file": {
                            "description": "ID of the training dataset file.",
                            "type": "string",
                            "example": "file_train123"
                          },
                          "labels": {
                            "description": "Custom labels for the fine-tuned model.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "production",
                              "test",
                              "experimental"
                            ]
                          },
                          "hyperparameters": {
                            "type": "object",
                            "properties": {
                              "batch_size": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "auto"
                                    ]
                                  },
                                  {
                                    "minimum": 1,
                                    "maximum": 64,
                                    "description": "Number of training samples per batch. Defaults to 'auto'.",
                                    "examples": [
                                      16
                                    ],
                                    "type": "number"
                                  }
                                ]
                              },
                              "learning_rate_multiplier": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "auto"
                                    ]
                                  },
                                  {
                                    "minimum": 0.0001,
                                    "maximum": 10,
                                    "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                                    "examples": [
                                      "auto"
                                    ],
                                    "type": "number"
                                  }
                                ]
                              },
                              "n_epochs": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "auto"
                                    ]
                                  },
                                  {
                                    "minimum": 1,
                                    "maximum": 100,
                                    "description": "Number of training epochs. Defaults to '10'.",
                                    "examples": [
                                      10
                                    ],
                                    "type": "number"
                                  }
                                ]
                              }
                            }
                          },
                          "method": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Fine-tuning method used ('supervised' or 'dpo').",
                                "example": "supervised",
                                "type": "string",
                                "enum": [
                                  "supervised",
                                  "dpo"
                                ]
                              },
                              "supervised": {
                                "type": "object",
                                "properties": {
                                  "batch_size": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "auto"
                                        ]
                                      },
                                      {
                                        "minimum": 1,
                                        "maximum": 64,
                                        "description": "Number of training samples per batch. Defaults to 'auto'.",
                                        "examples": [
                                          16
                                        ],
                                        "type": "number"
                                      }
                                    ]
                                  },
                                  "learning_rate_multiplier": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "auto"
                                        ]
                                      },
                                      {
                                        "minimum": 0.0001,
                                        "maximum": 10,
                                        "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                                        "examples": [
                                          "auto"
                                        ],
                                        "type": "number"
                                      }
                                    ]
                                  },
                                  "n_epochs": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "auto"
                                        ]
                                      },
                                      {
                                        "minimum": 1,
                                        "maximum": 100,
                                        "description": "Number of training epochs. Defaults to '10'.",
                                        "examples": [
                                          10
                                        ],
                                        "type": "number"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "trained_tokens": {
                            "description": "Total number of tokens processed during training.",
                            "type": "integer",
                            "example": 123456
                          },
                          "integrations": {
                            "description": "List of external integrations used during fine-tuning (e.g., Weights & Biases).",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "Type of integration (e.g., 'wandb').",
                                  "type": "string",
                                  "example": "wandb"
                                },
                                "wandb": {
                                  "type": "object",
                                  "properties": {
                                    "project": {
                                      "description": "WandB project name.",
                                      "type": "string",
                                      "example": "fine-tune-models"
                                    },
                                    "name": {
                                      "description": "WandB experiment name.",
                                      "type": "string",
                                      "example": "experiment-2025-03-30"
                                    },
                                    "tags": {
                                      "description": "List of tags associated with the integration.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "example": [
                                        "fine-tune",
                                        "v1",
                                        "test-run"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "project",
                                    "name",
                                    "tags"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "wandb"
                              ]
                            }
                          },
                          "seed": {
                            "description": "Random seed used for training reproducibility.",
                            "type": "integer",
                            "example": 42
                          },
                          "estimated_finish": {
                            "description": "Estimated completion time for the fine-tuning job (Unix timestamp in seconds).",
                            "type": "integer",
                            "example": 1711245000
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "description": "Error code, if applicable.",
                                "type": "string",
                                "example": 10000
                              },
                              "param": {
                                "description": "Parameter that caused the error, if applicable.",
                                "type": "string",
                                "example": "ft_job_abc123"
                              },
                              "message": {
                                "description": "Detailed error message, if applicable.",
                                "type": "string",
                                "example": "Fine Tune job doesn't exist"
                              }
                            }
                          },
                          "user_provided_suffix": {
                            "minLength": 1,
                            "maxLength": 32,
                            "description": "User-defined suffix for identifying the fine-tuned model.",
                            "type": "string",
                            "example": "my-custom-model"
                          },
                          "job_progress": {
                            "description": "Current fine tuning job progress data",
                            "type": "object",
                            "properties": {
                              "total_steps": {
                                "description": "Total steps in fine tune job",
                                "type": "number",
                                "example": 1000
                              },
                              "current_step": {
                                "description": "Current step in progress",
                                "type": "number",
                                "example": 450
                              }
                            },
                            "required": [
                              "total_steps"
                            ]
                          },
                          "metrics": {
                            "description": "Base metrics from the last checkpoint",
                            "type": "object",
                            "properties": {
                              "train_loss": {
                                "description": "Training loss of training",
                                "type": "number",
                                "example": 0.25
                              },
                              "valid_loss": {
                                "description": "Validation loss of training",
                                "type": "number",
                                "example": 0.3
                              },
                              "train_token_accuracy": {
                                "description": "Training token accuracy",
                                "type": "number",
                                "example": 0.95
                              },
                              "valid_token_accuracy": {
                                "description": "Validation token accuracy",
                                "type": "number",
                                "example": 0.92
                              }
                            }
                          }
                        },
                        "required": [
                          "object",
                          "id",
                          "model",
                          "created_at",
                          "result_files",
                          "status",
                          "training_file"
                        ]
                      },
                      "example": [
                        {
                          "object": "fine_tuning.job",
                          "id": "ft_job_abc123",
                          "model": "gpt-3.5-turbo",
                          "created_at": 1711234567,
                          "finished_at": 1711240000,
                          "fine_tuned_model": "ft_model_xyz789",
                          "organization_id": "org_456def",
                          "result_files": [
                            "file_abc123",
                            "file_def456"
                          ],
                          "status": "succeeded",
                          "validation_file": "file_valid123",
                          "training_file": "file_train123",
                          "labels": [
                            "production",
                            "test"
                          ],
                          "hyperparameters": {
                            "batch_size": 16,
                            "learning_rate_multiplier": "auto",
                            "n_epochs": 10
                          },
                          "method": {
                            "type": "supervised",
                            "supervised": {
                              "batch_size": 8,
                              "learning_rate_multiplier": 0.001,
                              "n_epochs": 3
                            }
                          },
                          "trained_tokens": 123456,
                          "integrations": [
                            {
                              "type": "wandb",
                              "wandb": {
                                "project": "fine-tune-models",
                                "name": "experiment-2025-03-30",
                                "tags": [
                                  "fine-tune",
                                  "v1",
                                  "test-run"
                                ]
                              }
                            }
                          ],
                          "seed": 42,
                          "estimated_finish": 1711245000,
                          "error": {
                            "code": "invalid_param",
                            "param": "training_file",
                            "message": "Training file is missing."
                          },
                          "user_provided_suffix": "my-custom-model",
                          "job_progress": {
                            "total_steps": 1000,
                            "current_step": 450
                          },
                          "metrics": {
                            "train_loss": 0.25,
                            "valid_loss": 0.3,
                            "train_token_accuracy": 0.95,
                            "valid_token_accuracy": 0.92
                          }
                        }
                      ]
                    },
                    "first_id": {
                      "description": "ID of the first fine-tuning job in the list.",
                      "type": "string",
                      "example": "ft_job_abc123"
                    },
                    "last_id": {
                      "description": "ID of the last fine-tuning job in the list.",
                      "type": "string",
                      "example": "ft_job_xyz999"
                    },
                    "has_more": {
                      "description": "Indicates if more fine-tuning jobs are available.",
                      "type": "boolean",
                      "example": false
                    },
                    "page_count": {
                      "description": "Total number of pages available in the response.",
                      "type": "number",
                      "example": 1
                    }
                  },
                  "required": [
                    "object",
                    "data",
                    "has_more"
                  ]
                },
                "example": {
                  "object": "list",
                  "data": [
                    {
                      "object": "fine_tuning.job",
                      "id": "ft_job_abc123",
                      "model": "gpt-3.5-turbo",
                      "created_at": 1711234567,
                      "finished_at": 1711240000,
                      "fine_tuned_model": "ft_model_xyz789",
                      "organization_id": "org_456def",
                      "result_files": [
                        "file_abc123",
                        "file_def456"
                      ],
                      "status": "succeeded",
                      "validation_file": "file_valid123",
                      "training_file": "file_train123",
                      "labels": [
                        "production",
                        "test"
                      ],
                      "hyperparameters": {
                        "batch_size": 16,
                        "learning_rate_multiplier": "auto",
                        "n_epochs": 10
                      },
                      "method": {
                        "type": "supervised",
                        "supervised": {
                          "batch_size": 8,
                          "learning_rate_multiplier": 0.001,
                          "n_epochs": 3
                        }
                      },
                      "trained_tokens": 123456,
                      "integrations": [
                        {
                          "type": "wandb",
                          "wandb": {
                            "project": "fine-tune-models",
                            "name": "experiment-2025-03-30",
                            "tags": [
                              "fine-tune",
                              "v1",
                              "test-run"
                            ]
                          }
                        }
                      ],
                      "seed": 42,
                      "estimated_finish": 1711245000,
                      "error": {
                        "code": "invalid_param",
                        "param": "training_file",
                        "message": "Training file is missing."
                      },
                      "user_provided_suffix": "my-custom-model",
                      "job_progress": {
                        "total_steps": 1000,
                        "current_step": 450
                      },
                      "metrics": {
                        "train_loss": 0.25,
                        "valid_loss": 0.3,
                        "train_token_accuracy": 0.95,
                        "valid_token_accuracy": 0.92
                      }
                    }
                  ],
                  "first_id": "ft_job_abc123",
                  "last_id": "ft_job_xyz999",
                  "has_more": false,
                  "page_count": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/fine_tuning/jobs/{id}": {
      "get": {
        "tags": [
          "Fine tuning"
        ],
        "description": "Get fine tuning job.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "ft_job_abc123",
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier for the fine-tuning job."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "Indicates this is a fine-tuning job object.",
                      "type": "string",
                      "enum": [
                        "fine_tuning.job"
                      ],
                      "example": "fine_tuning.job"
                    },
                    "id": {
                      "description": "Unique identifier for the fine-tuning job.",
                      "type": "string",
                      "example": "ft_job_abc123"
                    },
                    "model": {
                      "description": "Base model that is being fine-tuned.",
                      "type": "string",
                      "example": "meta-llama/Meta-Llama-3.1-8B-Instruct"
                    },
                    "created_at": {
                      "description": "Timestamp when the fine-tuning job was created.",
                      "type": "integer",
                      "example": 1711234567
                    },
                    "finished_at": {
                      "description": "Timestamp when the fine-tuning job was completed.",
                      "type": "integer",
                      "example": 1711240000
                    },
                    "fine_tuned_model": {
                      "description": "ID of the fine-tuned model.",
                      "type": "string",
                      "example": "ft_model_xyz789"
                    },
                    "organization_id": {
                      "description": "ID of the organization that owns the fine-tuning job.",
                      "type": "string",
                      "example": "org_456def"
                    },
                    "result_files": {
                      "description": "List of output file IDs generated by the fine-tuning job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "file_abc123",
                        "file_def456"
                      ]
                    },
                    "status": {
                      "description": "Current processing status of the fine-tuning job.",
                      "example": "succeeded",
                      "type": "string",
                      "enum": [
                        "validating_files",
                        "queued",
                        "running",
                        "succeeded",
                        "failed",
                        "cancelled"
                      ]
                    },
                    "validation_file": {
                      "description": "ID of the validation dataset file.",
                      "type": "string",
                      "example": "file_valid123"
                    },
                    "training_file": {
                      "description": "ID of the training dataset file.",
                      "type": "string",
                      "example": "file_train123"
                    },
                    "labels": {
                      "description": "Custom labels for the fine-tuned model.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "production",
                        "test",
                        "experimental"
                      ]
                    },
                    "hyperparameters": {
                      "type": "object",
                      "properties": {
                        "batch_size": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 1,
                              "maximum": 64,
                              "description": "Number of training samples per batch. Defaults to 'auto'.",
                              "examples": [
                                16
                              ],
                              "type": "number"
                            }
                          ]
                        },
                        "learning_rate_multiplier": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 0.0001,
                              "maximum": 10,
                              "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                              "examples": [
                                "auto"
                              ],
                              "type": "number"
                            }
                          ]
                        },
                        "n_epochs": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 1,
                              "maximum": 100,
                              "description": "Number of training epochs. Defaults to '10'.",
                              "examples": [
                                10
                              ],
                              "type": "number"
                            }
                          ]
                        }
                      }
                    },
                    "method": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Fine-tuning method used ('supervised' or 'dpo').",
                          "example": "supervised",
                          "type": "string",
                          "enum": [
                            "supervised",
                            "dpo"
                          ]
                        },
                        "supervised": {
                          "type": "object",
                          "properties": {
                            "batch_size": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 1,
                                  "maximum": 64,
                                  "description": "Number of training samples per batch. Defaults to 'auto'.",
                                  "examples": [
                                    16
                                  ],
                                  "type": "number"
                                }
                              ]
                            },
                            "learning_rate_multiplier": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 0.0001,
                                  "maximum": 10,
                                  "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                                  "examples": [
                                    "auto"
                                  ],
                                  "type": "number"
                                }
                              ]
                            },
                            "n_epochs": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 1,
                                  "maximum": 100,
                                  "description": "Number of training epochs. Defaults to '10'.",
                                  "examples": [
                                    10
                                  ],
                                  "type": "number"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "trained_tokens": {
                      "description": "Total number of tokens processed during training.",
                      "type": "integer",
                      "example": 123456
                    },
                    "integrations": {
                      "description": "List of external integrations used during fine-tuning (e.g., Weights & Biases).",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Type of integration (e.g., 'wandb').",
                            "type": "string",
                            "example": "wandb"
                          },
                          "wandb": {
                            "type": "object",
                            "properties": {
                              "project": {
                                "description": "WandB project name.",
                                "type": "string",
                                "example": "fine-tune-models"
                              },
                              "name": {
                                "description": "WandB experiment name.",
                                "type": "string",
                                "example": "experiment-2025-03-30"
                              },
                              "tags": {
                                "description": "List of tags associated with the integration.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "fine-tune",
                                  "v1",
                                  "test-run"
                                ]
                              }
                            },
                            "required": [
                              "project",
                              "name",
                              "tags"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "wandb"
                        ]
                      }
                    },
                    "seed": {
                      "description": "Random seed used for training reproducibility.",
                      "type": "integer",
                      "example": 42
                    },
                    "estimated_finish": {
                      "description": "Estimated completion time for the fine-tuning job (Unix timestamp in seconds).",
                      "type": "integer",
                      "example": 1711245000
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Error code, if applicable.",
                          "type": "string",
                          "example": 10000
                        },
                        "param": {
                          "description": "Parameter that caused the error, if applicable.",
                          "type": "string",
                          "example": "ft_job_abc123"
                        },
                        "message": {
                          "description": "Detailed error message, if applicable.",
                          "type": "string",
                          "example": "Fine Tune job doesn't exist"
                        }
                      }
                    },
                    "user_provided_suffix": {
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "User-defined suffix for identifying the fine-tuned model.",
                      "type": "string",
                      "example": "my-custom-model"
                    },
                    "job_progress": {
                      "description": "Current fine tuning job progress data",
                      "type": "object",
                      "properties": {
                        "total_steps": {
                          "description": "Total steps in fine tune job",
                          "type": "number",
                          "example": 1000
                        },
                        "current_step": {
                          "description": "Current step in progress",
                          "type": "number",
                          "example": 450
                        }
                      },
                      "required": [
                        "total_steps"
                      ]
                    },
                    "metrics": {
                      "description": "Base metrics from the last checkpoint",
                      "type": "object",
                      "properties": {
                        "train_loss": {
                          "description": "Training loss of training",
                          "type": "number",
                          "example": 0.25
                        },
                        "valid_loss": {
                          "description": "Validation loss of training",
                          "type": "number",
                          "example": 0.3
                        },
                        "train_token_accuracy": {
                          "description": "Training token accuracy",
                          "type": "number",
                          "example": 0.95
                        },
                        "valid_token_accuracy": {
                          "description": "Validation token accuracy",
                          "type": "number",
                          "example": 0.92
                        }
                      }
                    }
                  },
                  "required": [
                    "object",
                    "id",
                    "model",
                    "created_at",
                    "result_files",
                    "status",
                    "training_file"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Fine tuning"
        ],
        "description": "Delete fine tuning job.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "ft_job_abc123",
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier for the fine-tuning job."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "Indicates this is a fine-tuning job object.",
                      "type": "string",
                      "enum": [
                        "fine_tuning.job"
                      ],
                      "example": "fine_tuning.job"
                    },
                    "id": {
                      "description": "Unique identifier for the fine-tuning job.",
                      "type": "string",
                      "example": "ft_job_abc123"
                    },
                    "model": {
                      "description": "Base model that is being fine-tuned.",
                      "type": "string",
                      "example": "meta-llama/Meta-Llama-3.1-8B-Instruct"
                    },
                    "created_at": {
                      "description": "Timestamp when the fine-tuning job was created.",
                      "type": "integer",
                      "example": 1711234567
                    },
                    "finished_at": {
                      "description": "Timestamp when the fine-tuning job was completed.",
                      "type": "integer",
                      "example": 1711240000
                    },
                    "fine_tuned_model": {
                      "description": "ID of the fine-tuned model.",
                      "type": "string",
                      "example": "ft_model_xyz789"
                    },
                    "organization_id": {
                      "description": "ID of the organization that owns the fine-tuning job.",
                      "type": "string",
                      "example": "org_456def"
                    },
                    "result_files": {
                      "description": "List of output file IDs generated by the fine-tuning job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "file_abc123",
                        "file_def456"
                      ]
                    },
                    "status": {
                      "description": "Current processing status of the fine-tuning job.",
                      "example": "succeeded",
                      "type": "string",
                      "enum": [
                        "validating_files",
                        "queued",
                        "running",
                        "succeeded",
                        "failed",
                        "cancelled"
                      ]
                    },
                    "validation_file": {
                      "description": "ID of the validation dataset file.",
                      "type": "string",
                      "example": "file_valid123"
                    },
                    "training_file": {
                      "description": "ID of the training dataset file.",
                      "type": "string",
                      "example": "file_train123"
                    },
                    "labels": {
                      "description": "Custom labels for the fine-tuned model.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "production",
                        "test",
                        "experimental"
                      ]
                    },
                    "hyperparameters": {
                      "type": "object",
                      "properties": {
                        "batch_size": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 1,
                              "maximum": 64,
                              "description": "Number of training samples per batch. Defaults to 'auto'.",
                              "examples": [
                                16
                              ],
                              "type": "number"
                            }
                          ]
                        },
                        "learning_rate_multiplier": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 0.0001,
                              "maximum": 10,
                              "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                              "examples": [
                                "auto"
                              ],
                              "type": "number"
                            }
                          ]
                        },
                        "n_epochs": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 1,
                              "maximum": 100,
                              "description": "Number of training epochs. Defaults to '10'.",
                              "examples": [
                                10
                              ],
                              "type": "number"
                            }
                          ]
                        }
                      }
                    },
                    "method": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Fine-tuning method used ('supervised' or 'dpo').",
                          "example": "supervised",
                          "type": "string",
                          "enum": [
                            "supervised",
                            "dpo"
                          ]
                        },
                        "supervised": {
                          "type": "object",
                          "properties": {
                            "batch_size": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 1,
                                  "maximum": 64,
                                  "description": "Number of training samples per batch. Defaults to 'auto'.",
                                  "examples": [
                                    16
                                  ],
                                  "type": "number"
                                }
                              ]
                            },
                            "learning_rate_multiplier": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 0.0001,
                                  "maximum": 10,
                                  "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                                  "examples": [
                                    "auto"
                                  ],
                                  "type": "number"
                                }
                              ]
                            },
                            "n_epochs": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 1,
                                  "maximum": 100,
                                  "description": "Number of training epochs. Defaults to '10'.",
                                  "examples": [
                                    10
                                  ],
                                  "type": "number"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "trained_tokens": {
                      "description": "Total number of tokens processed during training.",
                      "type": "integer",
                      "example": 123456
                    },
                    "integrations": {
                      "description": "List of external integrations used during fine-tuning (e.g., Weights & Biases).",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Type of integration (e.g., 'wandb').",
                            "type": "string",
                            "example": "wandb"
                          },
                          "wandb": {
                            "type": "object",
                            "properties": {
                              "project": {
                                "description": "WandB project name.",
                                "type": "string",
                                "example": "fine-tune-models"
                              },
                              "name": {
                                "description": "WandB experiment name.",
                                "type": "string",
                                "example": "experiment-2025-03-30"
                              },
                              "tags": {
                                "description": "List of tags associated with the integration.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "fine-tune",
                                  "v1",
                                  "test-run"
                                ]
                              }
                            },
                            "required": [
                              "project",
                              "name",
                              "tags"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "wandb"
                        ]
                      }
                    },
                    "seed": {
                      "description": "Random seed used for training reproducibility.",
                      "type": "integer",
                      "example": 42
                    },
                    "estimated_finish": {
                      "description": "Estimated completion time for the fine-tuning job (Unix timestamp in seconds).",
                      "type": "integer",
                      "example": 1711245000
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Error code, if applicable.",
                          "type": "string",
                          "example": 10000
                        },
                        "param": {
                          "description": "Parameter that caused the error, if applicable.",
                          "type": "string",
                          "example": "ft_job_abc123"
                        },
                        "message": {
                          "description": "Detailed error message, if applicable.",
                          "type": "string",
                          "example": "Fine Tune job doesn't exist"
                        }
                      }
                    },
                    "user_provided_suffix": {
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "User-defined suffix for identifying the fine-tuned model.",
                      "type": "string",
                      "example": "my-custom-model"
                    },
                    "job_progress": {
                      "description": "Current fine tuning job progress data",
                      "type": "object",
                      "properties": {
                        "total_steps": {
                          "description": "Total steps in fine tune job",
                          "type": "number",
                          "example": 1000
                        },
                        "current_step": {
                          "description": "Current step in progress",
                          "type": "number",
                          "example": 450
                        }
                      },
                      "required": [
                        "total_steps"
                      ]
                    },
                    "metrics": {
                      "description": "Base metrics from the last checkpoint",
                      "type": "object",
                      "properties": {
                        "train_loss": {
                          "description": "Training loss of training",
                          "type": "number",
                          "example": 0.25
                        },
                        "valid_loss": {
                          "description": "Validation loss of training",
                          "type": "number",
                          "example": 0.3
                        },
                        "train_token_accuracy": {
                          "description": "Training token accuracy",
                          "type": "number",
                          "example": 0.95
                        },
                        "valid_token_accuracy": {
                          "description": "Validation token accuracy",
                          "type": "number",
                          "example": 0.92
                        }
                      }
                    }
                  },
                  "required": [
                    "object",
                    "id",
                    "model",
                    "created_at",
                    "result_files",
                    "status",
                    "training_file"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/fine_tuning/jobs/{id}/labels": {
      "post": {
        "tags": [
          "Fine tuning"
        ],
        "description": "Add a label to fine tuning job.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "label": {
                    "description": "Label to add to the fine-tuning job.",
                    "type": "string",
                    "example": "production"
                  }
                },
                "required": [
                  "label"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "ft_job_abc123",
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier for the fine-tuning job."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "Indicates this is a fine-tuning job object.",
                      "type": "string",
                      "enum": [
                        "fine_tuning.job"
                      ],
                      "example": "fine_tuning.job"
                    },
                    "id": {
                      "description": "Unique identifier for the fine-tuning job.",
                      "type": "string",
                      "example": "ft_job_abc123"
                    },
                    "model": {
                      "description": "Base model that is being fine-tuned.",
                      "type": "string",
                      "example": "meta-llama/Meta-Llama-3.1-8B-Instruct"
                    },
                    "created_at": {
                      "description": "Timestamp when the fine-tuning job was created.",
                      "type": "integer",
                      "example": 1711234567
                    },
                    "finished_at": {
                      "description": "Timestamp when the fine-tuning job was completed.",
                      "type": "integer",
                      "example": 1711240000
                    },
                    "fine_tuned_model": {
                      "description": "ID of the fine-tuned model.",
                      "type": "string",
                      "example": "ft_model_xyz789"
                    },
                    "organization_id": {
                      "description": "ID of the organization that owns the fine-tuning job.",
                      "type": "string",
                      "example": "org_456def"
                    },
                    "result_files": {
                      "description": "List of output file IDs generated by the fine-tuning job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "file_abc123",
                        "file_def456"
                      ]
                    },
                    "status": {
                      "description": "Current processing status of the fine-tuning job.",
                      "example": "succeeded",
                      "type": "string",
                      "enum": [
                        "validating_files",
                        "queued",
                        "running",
                        "succeeded",
                        "failed",
                        "cancelled"
                      ]
                    },
                    "validation_file": {
                      "description": "ID of the validation dataset file.",
                      "type": "string",
                      "example": "file_valid123"
                    },
                    "training_file": {
                      "description": "ID of the training dataset file.",
                      "type": "string",
                      "example": "file_train123"
                    },
                    "labels": {
                      "description": "Custom labels for the fine-tuned model.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "production",
                        "test",
                        "experimental"
                      ]
                    },
                    "hyperparameters": {
                      "type": "object",
                      "properties": {
                        "batch_size": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 1,
                              "maximum": 64,
                              "description": "Number of training samples per batch. Defaults to 'auto'.",
                              "examples": [
                                16
                              ],
                              "type": "number"
                            }
                          ]
                        },
                        "learning_rate_multiplier": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 0.0001,
                              "maximum": 10,
                              "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                              "examples": [
                                "auto"
                              ],
                              "type": "number"
                            }
                          ]
                        },
                        "n_epochs": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 1,
                              "maximum": 100,
                              "description": "Number of training epochs. Defaults to '10'.",
                              "examples": [
                                10
                              ],
                              "type": "number"
                            }
                          ]
                        }
                      }
                    },
                    "method": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Fine-tuning method used ('supervised' or 'dpo').",
                          "example": "supervised",
                          "type": "string",
                          "enum": [
                            "supervised",
                            "dpo"
                          ]
                        },
                        "supervised": {
                          "type": "object",
                          "properties": {
                            "batch_size": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 1,
                                  "maximum": 64,
                                  "description": "Number of training samples per batch. Defaults to 'auto'.",
                                  "examples": [
                                    16
                                  ],
                                  "type": "number"
                                }
                              ]
                            },
                            "learning_rate_multiplier": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 0.0001,
                                  "maximum": 10,
                                  "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                                  "examples": [
                                    "auto"
                                  ],
                                  "type": "number"
                                }
                              ]
                            },
                            "n_epochs": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 1,
                                  "maximum": 100,
                                  "description": "Number of training epochs. Defaults to '10'.",
                                  "examples": [
                                    10
                                  ],
                                  "type": "number"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "trained_tokens": {
                      "description": "Total number of tokens processed during training.",
                      "type": "integer",
                      "example": 123456
                    },
                    "integrations": {
                      "description": "List of external integrations used during fine-tuning (e.g., Weights & Biases).",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Type of integration (e.g., 'wandb').",
                            "type": "string",
                            "example": "wandb"
                          },
                          "wandb": {
                            "type": "object",
                            "properties": {
                              "project": {
                                "description": "WandB project name.",
                                "type": "string",
                                "example": "fine-tune-models"
                              },
                              "name": {
                                "description": "WandB experiment name.",
                                "type": "string",
                                "example": "experiment-2025-03-30"
                              },
                              "tags": {
                                "description": "List of tags associated with the integration.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "fine-tune",
                                  "v1",
                                  "test-run"
                                ]
                              }
                            },
                            "required": [
                              "project",
                              "name",
                              "tags"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "wandb"
                        ]
                      }
                    },
                    "seed": {
                      "description": "Random seed used for training reproducibility.",
                      "type": "integer",
                      "example": 42
                    },
                    "estimated_finish": {
                      "description": "Estimated completion time for the fine-tuning job (Unix timestamp in seconds).",
                      "type": "integer",
                      "example": 1711245000
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Error code, if applicable.",
                          "type": "string",
                          "example": 10000
                        },
                        "param": {
                          "description": "Parameter that caused the error, if applicable.",
                          "type": "string",
                          "example": "ft_job_abc123"
                        },
                        "message": {
                          "description": "Detailed error message, if applicable.",
                          "type": "string",
                          "example": "Fine Tune job doesn't exist"
                        }
                      }
                    },
                    "user_provided_suffix": {
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "User-defined suffix for identifying the fine-tuned model.",
                      "type": "string",
                      "example": "my-custom-model"
                    },
                    "job_progress": {
                      "description": "Current fine tuning job progress data",
                      "type": "object",
                      "properties": {
                        "total_steps": {
                          "description": "Total steps in fine tune job",
                          "type": "number",
                          "example": 1000
                        },
                        "current_step": {
                          "description": "Current step in progress",
                          "type": "number",
                          "example": 450
                        }
                      },
                      "required": [
                        "total_steps"
                      ]
                    },
                    "metrics": {
                      "description": "Base metrics from the last checkpoint",
                      "type": "object",
                      "properties": {
                        "train_loss": {
                          "description": "Training loss of training",
                          "type": "number",
                          "example": 0.25
                        },
                        "valid_loss": {
                          "description": "Validation loss of training",
                          "type": "number",
                          "example": 0.3
                        },
                        "train_token_accuracy": {
                          "description": "Training token accuracy",
                          "type": "number",
                          "example": 0.95
                        },
                        "valid_token_accuracy": {
                          "description": "Validation token accuracy",
                          "type": "number",
                          "example": 0.92
                        }
                      }
                    }
                  },
                  "required": [
                    "object",
                    "id",
                    "model",
                    "created_at",
                    "result_files",
                    "status",
                    "training_file"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Fine tuning"
        ],
        "description": "Remove a label from fine tuning job.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "label": {
                    "description": "Label to remove from the fine-tuning job.",
                    "type": "string",
                    "example": "production"
                  }
                },
                "required": [
                  "label"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "ft_job_abc123",
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier for the fine-tuning job."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "Indicates this is a fine-tuning job object.",
                      "type": "string",
                      "enum": [
                        "fine_tuning.job"
                      ],
                      "example": "fine_tuning.job"
                    },
                    "id": {
                      "description": "Unique identifier for the fine-tuning job.",
                      "type": "string",
                      "example": "ft_job_abc123"
                    },
                    "model": {
                      "description": "Base model that is being fine-tuned.",
                      "type": "string",
                      "example": "meta-llama/Meta-Llama-3.1-8B-Instruct"
                    },
                    "created_at": {
                      "description": "Timestamp when the fine-tuning job was created.",
                      "type": "integer",
                      "example": 1711234567
                    },
                    "finished_at": {
                      "description": "Timestamp when the fine-tuning job was completed.",
                      "type": "integer",
                      "example": 1711240000
                    },
                    "fine_tuned_model": {
                      "description": "ID of the fine-tuned model.",
                      "type": "string",
                      "example": "ft_model_xyz789"
                    },
                    "organization_id": {
                      "description": "ID of the organization that owns the fine-tuning job.",
                      "type": "string",
                      "example": "org_456def"
                    },
                    "result_files": {
                      "description": "List of output file IDs generated by the fine-tuning job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "file_abc123",
                        "file_def456"
                      ]
                    },
                    "status": {
                      "description": "Current processing status of the fine-tuning job.",
                      "example": "succeeded",
                      "type": "string",
                      "enum": [
                        "validating_files",
                        "queued",
                        "running",
                        "succeeded",
                        "failed",
                        "cancelled"
                      ]
                    },
                    "validation_file": {
                      "description": "ID of the validation dataset file.",
                      "type": "string",
                      "example": "file_valid123"
                    },
                    "training_file": {
                      "description": "ID of the training dataset file.",
                      "type": "string",
                      "example": "file_train123"
                    },
                    "labels": {
                      "description": "Custom labels for the fine-tuned model.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "production",
                        "test",
                        "experimental"
                      ]
                    },
                    "hyperparameters": {
                      "type": "object",
                      "properties": {
                        "batch_size": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 1,
                              "maximum": 64,
                              "description": "Number of training samples per batch. Defaults to 'auto'.",
                              "examples": [
                                16
                              ],
                              "type": "number"
                            }
                          ]
                        },
                        "learning_rate_multiplier": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 0.0001,
                              "maximum": 10,
                              "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                              "examples": [
                                "auto"
                              ],
                              "type": "number"
                            }
                          ]
                        },
                        "n_epochs": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 1,
                              "maximum": 100,
                              "description": "Number of training epochs. Defaults to '10'.",
                              "examples": [
                                10
                              ],
                              "type": "number"
                            }
                          ]
                        }
                      }
                    },
                    "method": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Fine-tuning method used ('supervised' or 'dpo').",
                          "example": "supervised",
                          "type": "string",
                          "enum": [
                            "supervised",
                            "dpo"
                          ]
                        },
                        "supervised": {
                          "type": "object",
                          "properties": {
                            "batch_size": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 1,
                                  "maximum": 64,
                                  "description": "Number of training samples per batch. Defaults to 'auto'.",
                                  "examples": [
                                    16
                                  ],
                                  "type": "number"
                                }
                              ]
                            },
                            "learning_rate_multiplier": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 0.0001,
                                  "maximum": 10,
                                  "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                                  "examples": [
                                    "auto"
                                  ],
                                  "type": "number"
                                }
                              ]
                            },
                            "n_epochs": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 1,
                                  "maximum": 100,
                                  "description": "Number of training epochs. Defaults to '10'.",
                                  "examples": [
                                    10
                                  ],
                                  "type": "number"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "trained_tokens": {
                      "description": "Total number of tokens processed during training.",
                      "type": "integer",
                      "example": 123456
                    },
                    "integrations": {
                      "description": "List of external integrations used during fine-tuning (e.g., Weights & Biases).",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Type of integration (e.g., 'wandb').",
                            "type": "string",
                            "example": "wandb"
                          },
                          "wandb": {
                            "type": "object",
                            "properties": {
                              "project": {
                                "description": "WandB project name.",
                                "type": "string",
                                "example": "fine-tune-models"
                              },
                              "name": {
                                "description": "WandB experiment name.",
                                "type": "string",
                                "example": "experiment-2025-03-30"
                              },
                              "tags": {
                                "description": "List of tags associated with the integration.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "fine-tune",
                                  "v1",
                                  "test-run"
                                ]
                              }
                            },
                            "required": [
                              "project",
                              "name",
                              "tags"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "wandb"
                        ]
                      }
                    },
                    "seed": {
                      "description": "Random seed used for training reproducibility.",
                      "type": "integer",
                      "example": 42
                    },
                    "estimated_finish": {
                      "description": "Estimated completion time for the fine-tuning job (Unix timestamp in seconds).",
                      "type": "integer",
                      "example": 1711245000
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Error code, if applicable.",
                          "type": "string",
                          "example": 10000
                        },
                        "param": {
                          "description": "Parameter that caused the error, if applicable.",
                          "type": "string",
                          "example": "ft_job_abc123"
                        },
                        "message": {
                          "description": "Detailed error message, if applicable.",
                          "type": "string",
                          "example": "Fine Tune job doesn't exist"
                        }
                      }
                    },
                    "user_provided_suffix": {
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "User-defined suffix for identifying the fine-tuned model.",
                      "type": "string",
                      "example": "my-custom-model"
                    },
                    "job_progress": {
                      "description": "Current fine tuning job progress data",
                      "type": "object",
                      "properties": {
                        "total_steps": {
                          "description": "Total steps in fine tune job",
                          "type": "number",
                          "example": 1000
                        },
                        "current_step": {
                          "description": "Current step in progress",
                          "type": "number",
                          "example": 450
                        }
                      },
                      "required": [
                        "total_steps"
                      ]
                    },
                    "metrics": {
                      "description": "Base metrics from the last checkpoint",
                      "type": "object",
                      "properties": {
                        "train_loss": {
                          "description": "Training loss of training",
                          "type": "number",
                          "example": 0.25
                        },
                        "valid_loss": {
                          "description": "Validation loss of training",
                          "type": "number",
                          "example": 0.3
                        },
                        "train_token_accuracy": {
                          "description": "Training token accuracy",
                          "type": "number",
                          "example": 0.95
                        },
                        "valid_token_accuracy": {
                          "description": "Validation token accuracy",
                          "type": "number",
                          "example": 0.92
                        }
                      }
                    }
                  },
                  "required": [
                    "object",
                    "id",
                    "model",
                    "created_at",
                    "result_files",
                    "status",
                    "training_file"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/fine_tuning/jobs/{id}/cancel": {
      "post": {
        "tags": [
          "Fine tuning"
        ],
        "description": "Cancel fine tuning job.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "ft_job_abc123",
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier for the fine-tuning job."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "Indicates this is a fine-tuning job object.",
                      "type": "string",
                      "enum": [
                        "fine_tuning.job"
                      ],
                      "example": "fine_tuning.job"
                    },
                    "id": {
                      "description": "Unique identifier for the fine-tuning job.",
                      "type": "string",
                      "example": "ft_job_abc123"
                    },
                    "model": {
                      "description": "Base model that is being fine-tuned.",
                      "type": "string",
                      "example": "meta-llama/Meta-Llama-3.1-8B-Instruct"
                    },
                    "created_at": {
                      "description": "Timestamp when the fine-tuning job was created.",
                      "type": "integer",
                      "example": 1711234567
                    },
                    "finished_at": {
                      "description": "Timestamp when the fine-tuning job was completed.",
                      "type": "integer",
                      "example": 1711240000
                    },
                    "fine_tuned_model": {
                      "description": "ID of the fine-tuned model.",
                      "type": "string",
                      "example": "ft_model_xyz789"
                    },
                    "organization_id": {
                      "description": "ID of the organization that owns the fine-tuning job.",
                      "type": "string",
                      "example": "org_456def"
                    },
                    "result_files": {
                      "description": "List of output file IDs generated by the fine-tuning job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "file_abc123",
                        "file_def456"
                      ]
                    },
                    "status": {
                      "description": "Current processing status of the fine-tuning job.",
                      "example": "succeeded",
                      "type": "string",
                      "enum": [
                        "validating_files",
                        "queued",
                        "running",
                        "succeeded",
                        "failed",
                        "cancelled"
                      ]
                    },
                    "validation_file": {
                      "description": "ID of the validation dataset file.",
                      "type": "string",
                      "example": "file_valid123"
                    },
                    "training_file": {
                      "description": "ID of the training dataset file.",
                      "type": "string",
                      "example": "file_train123"
                    },
                    "labels": {
                      "description": "Custom labels for the fine-tuned model.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "production",
                        "test",
                        "experimental"
                      ]
                    },
                    "hyperparameters": {
                      "type": "object",
                      "properties": {
                        "batch_size": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 1,
                              "maximum": 64,
                              "description": "Number of training samples per batch. Defaults to 'auto'.",
                              "examples": [
                                16
                              ],
                              "type": "number"
                            }
                          ]
                        },
                        "learning_rate_multiplier": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 0.0001,
                              "maximum": 10,
                              "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                              "examples": [
                                "auto"
                              ],
                              "type": "number"
                            }
                          ]
                        },
                        "n_epochs": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "auto"
                              ]
                            },
                            {
                              "minimum": 1,
                              "maximum": 100,
                              "description": "Number of training epochs. Defaults to '10'.",
                              "examples": [
                                10
                              ],
                              "type": "number"
                            }
                          ]
                        }
                      }
                    },
                    "method": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Fine-tuning method used ('supervised' or 'dpo').",
                          "example": "supervised",
                          "type": "string",
                          "enum": [
                            "supervised",
                            "dpo"
                          ]
                        },
                        "supervised": {
                          "type": "object",
                          "properties": {
                            "batch_size": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 1,
                                  "maximum": 64,
                                  "description": "Number of training samples per batch. Defaults to 'auto'.",
                                  "examples": [
                                    16
                                  ],
                                  "type": "number"
                                }
                              ]
                            },
                            "learning_rate_multiplier": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 0.0001,
                                  "maximum": 10,
                                  "description": "Multiplier applied to the base learning rate. Defaults to 'auto'.",
                                  "examples": [
                                    "auto"
                                  ],
                                  "type": "number"
                                }
                              ]
                            },
                            "n_epochs": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "auto"
                                  ]
                                },
                                {
                                  "minimum": 1,
                                  "maximum": 100,
                                  "description": "Number of training epochs. Defaults to '10'.",
                                  "examples": [
                                    10
                                  ],
                                  "type": "number"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "trained_tokens": {
                      "description": "Total number of tokens processed during training.",
                      "type": "integer",
                      "example": 123456
                    },
                    "integrations": {
                      "description": "List of external integrations used during fine-tuning (e.g., Weights & Biases).",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Type of integration (e.g., 'wandb').",
                            "type": "string",
                            "example": "wandb"
                          },
                          "wandb": {
                            "type": "object",
                            "properties": {
                              "project": {
                                "description": "WandB project name.",
                                "type": "string",
                                "example": "fine-tune-models"
                              },
                              "name": {
                                "description": "WandB experiment name.",
                                "type": "string",
                                "example": "experiment-2025-03-30"
                              },
                              "tags": {
                                "description": "List of tags associated with the integration.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "fine-tune",
                                  "v1",
                                  "test-run"
                                ]
                              }
                            },
                            "required": [
                              "project",
                              "name",
                              "tags"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "wandb"
                        ]
                      }
                    },
                    "seed": {
                      "description": "Random seed used for training reproducibility.",
                      "type": "integer",
                      "example": 42
                    },
                    "estimated_finish": {
                      "description": "Estimated completion time for the fine-tuning job (Unix timestamp in seconds).",
                      "type": "integer",
                      "example": 1711245000
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Error code, if applicable.",
                          "type": "string",
                          "example": 10000
                        },
                        "param": {
                          "description": "Parameter that caused the error, if applicable.",
                          "type": "string",
                          "example": "ft_job_abc123"
                        },
                        "message": {
                          "description": "Detailed error message, if applicable.",
                          "type": "string",
                          "example": "Fine Tune job doesn't exist"
                        }
                      }
                    },
                    "user_provided_suffix": {
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "User-defined suffix for identifying the fine-tuned model.",
                      "type": "string",
                      "example": "my-custom-model"
                    },
                    "job_progress": {
                      "description": "Current fine tuning job progress data",
                      "type": "object",
                      "properties": {
                        "total_steps": {
                          "description": "Total steps in fine tune job",
                          "type": "number",
                          "example": 1000
                        },
                        "current_step": {
                          "description": "Current step in progress",
                          "type": "number",
                          "example": 450
                        }
                      },
                      "required": [
                        "total_steps"
                      ]
                    },
                    "metrics": {
                      "description": "Base metrics from the last checkpoint",
                      "type": "object",
                      "properties": {
                        "train_loss": {
                          "description": "Training loss of training",
                          "type": "number",
                          "example": 0.25
                        },
                        "valid_loss": {
                          "description": "Validation loss of training",
                          "type": "number",
                          "example": 0.3
                        },
                        "train_token_accuracy": {
                          "description": "Training token accuracy",
                          "type": "number",
                          "example": 0.95
                        },
                        "valid_token_accuracy": {
                          "description": "Validation token accuracy",
                          "type": "number",
                          "example": 0.92
                        }
                      }
                    }
                  },
                  "required": [
                    "object",
                    "id",
                    "model",
                    "created_at",
                    "result_files",
                    "status",
                    "training_file"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/fine_tuning/jobs/{id}/events": {
      "get": {
        "tags": [
          "Fine tuning"
        ],
        "description": "Get fine tuning job events.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "after",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "example": "ft_job_abc123",
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier for the fine-tuning job."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "Indicates this is a list of fine-tuning job events.",
                      "type": "string",
                      "enum": [
                        "list"
                      ],
                      "example": "list"
                    },
                    "data": {
                      "description": "Array of fine-tuning job event objects.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "object": {
                            "description": "Indicates this is a fine-tuning job event object.",
                            "type": "string",
                            "enum": [
                              "fine_tuning.job.event"
                            ],
                            "example": "fine_tuning.job.event"
                          },
                          "id": {
                            "description": "Unique identifier for the fine-tuning event.",
                            "type": "string",
                            "example": "finetune_123abc"
                          },
                          "created_at": {
                            "description": "Timestamp when the event was recorded (Unix timestamp in seconds).",
                            "type": "integer",
                            "example": 1711245000
                          },
                          "level": {
                            "description": "Severity level of the event (e.g., info, warning, error).",
                            "type": "string",
                            "example": "warning"
                          },
                          "message": {
                            "description": "Human-readable message describing the event.",
                            "type": "string",
                            "example": "Created fine-tuning job: finetune_123abc"
                          },
                          "data": {
                            "description": "Additional event data, if applicable.",
                            "anyOf": [
                              {
                                "type": "null"
                              },
                              {}
                            ]
                          },
                          "type": {
                            "description": "Event type, currently always 'message'.",
                            "type": "string",
                            "enum": [
                              "message"
                            ],
                            "example": "message"
                          }
                        },
                        "required": [
                          "object",
                          "id",
                          "created_at",
                          "type"
                        ]
                      }
                    },
                    "has_more": {
                      "description": "Indicates whether additional events are available for pagination.",
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "required": [
                    "object",
                    "data",
                    "has_more"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/fine_tuning/jobs/{id}/checkpoints": {
      "get": {
        "tags": [
          "Fine tuning"
        ],
        "description": "Get fine tuning job checkpoints.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "after",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "example": "ft_job_abc123",
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier for the fine-tuning job."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "description": "Indicates this is a list of fine-tuning job checkpoints.",
                      "type": "string",
                      "enum": [
                        "list"
                      ],
                      "example": "list"
                    },
                    "data": {
                      "description": "Array of fine-tuning job checkpoint objects.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "object": {
                            "description": "Indicates this is a fine-tuning job checkpoint object.",
                            "type": "string",
                            "enum": [
                              "fine_tuning.job.checkpoint"
                            ],
                            "example": "fine_tuning.job.checkpoint"
                          },
                          "id": {
                            "description": "Unique identifier for the checkpoint.",
                            "type": "string"
                          },
                          "created_at": {
                            "description": "Timestamp when the checkpoint was created (Unix timestamp in seconds).",
                            "type": "integer",
                            "example": 1711245000
                          },
                          "fine_tuned_model_checkpoint": {
                            "description": "Identifier of the fine-tuned model checkpoint, if available.",
                            "type": "string",
                            "example": "ckpt_abc123"
                          },
                          "metrics": {
                            "description": "Training and validation metrics recorded at this checkpoint.",
                            "type": "object",
                            "properties": {
                              "full_valid_loss": {
                                "description": "Full validation loss recorded at this checkpoint.",
                                "type": "number",
                                "example": 0.35
                              },
                              "full_valid_mean_token_accuracy": {
                                "description": "Mean token accuracy during full validation at this checkpoint.",
                                "type": "number",
                                "example": 0.89
                              },
                              "total_steps": {
                                "description": "Total number of training steps completed at this checkpoint.",
                                "type": "number",
                                "example": 1000
                              },
                              "train_loss": {
                                "description": "Training loss recorded at this checkpoint.",
                                "type": "number",
                                "example": 0.25
                              },
                              "valid_loss": {
                                "description": "Validation loss recorded at this checkpoint.",
                                "type": "number",
                                "example": 0.3
                              },
                              "train_mean_token_accuracy": {
                                "description": "Mean token accuracy during training at this checkpoint.",
                                "type": "number",
                                "example": 0.92
                              },
                              "valid_mean_token_accuracy": {
                                "description": "Mean token accuracy during validation at this checkpoint.",
                                "type": "number",
                                "example": 0.89
                              },
                              "step": {
                                "description": "Step number associated with this checkpoint.",
                                "type": "number",
                                "example": 450
                              }
                            },
                            "example": {
                              "full_valid_loss": 0.35,
                              "full_valid_mean_token_accuracy": 0.89,
                              "total_steps": 1000,
                              "train_loss": 0.25,
                              "valid_loss": 0.3,
                              "train_mean_token_accuracy": 0.92,
                              "valid_mean_token_accuracy": 0.89,
                              "step": 450
                            }
                          },
                          "fine_tuning_job_id": {
                            "description": "ID of the fine-tuning job this checkpoint belongs to.",
                            "type": "string",
                            "example": "finetune_abc123"
                          },
                          "step_number": {
                            "description": "Step number at which this checkpoint was recorded.",
                            "type": "integer",
                            "example": 450
                          }
                        },
                        "required": [
                          "object",
                          "id",
                          "created_at",
                          "metrics",
                          "fine_tuning_job_id",
                          "step_number"
                        ]
                      },
                      "example": [
                        {
                          "object": "fine_tuning.job.checkpoint",
                          "id": "ckpt_abc123",
                          "created_at": 1711234567,
                          "fine_tuned_model_checkpoint": "ft_model_ckpt_xyz789",
                          "metrics": {
                            "full_valid_loss": 0.35,
                            "full_valid_mean_token_accuracy": 0.89,
                            "total_steps": 1000,
                            "train_loss": 0.25,
                            "valid_loss": 0.3,
                            "train_mean_token_accuracy": 0.92,
                            "valid_mean_token_accuracy": 0.89,
                            "step": 450
                          },
                          "fine_tuning_job_id": "ft_job_abc123",
                          "step_number": 450
                        }
                      ]
                    },
                    "first_id": {
                      "description": "ID of the first checkpoint in the list, if paginated.",
                      "type": "string",
                      "example": "ckpt_abc123"
                    },
                    "last_id": {
                      "description": "ID of the last checkpoint in the list, if paginated.",
                      "type": "string",
                      "example": "ckpt_xyz999"
                    },
                    "has_more": {
                      "description": "Indicates whether additional checkpoints are available for pagination.",
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "required": [
                    "object",
                    "data",
                    "has_more"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/models": {
      "get": {
        "tags": [
          "Models"
        ],
        "description": "Get all available supported models.",
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "in": "query",
            "name": "extended",
            "required": false,
            "description": "Whether to include extended model metadata."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Unique identifier for the model.",
                                "examples": [
                                  "model_abc123"
                                ],
                                "type": "string"
                              },
                              "internal_model_id": {
                                "description": "Unique internal identifier for the model.",
                                "examples": [
                                  "internal_model_xyz789"
                                ],
                                "type": "string"
                              },
                              "object": {
                                "description": "Indicates this is a model object.",
                                "examples": [
                                  "model"
                                ],
                                "type": "string"
                              },
                              "created": {
                                "description": "Timestamp when the fine-tuning job was created.",
                                "examples": [
                                  1711234567
                                ],
                                "type": "number"
                              },
                              "release_date": {
                                "description": "Timestamp when the model was released.",
                                "examples": [
                                  1711234567
                                ],
                                "type": "number"
                              },
                              "model_size": {
                                "description": "Shows model size.",
                                "examples": [
                                  "8b",
                                  "70b"
                                ],
                                "type": "string"
                              },
                              "owned_by": {
                                "description": "Identifies the owner of the model.",
                                "examples": [
                                  "org_456def"
                                ],
                                "type": "string"
                              },
                              "reasoning_model": {
                                "description": "Indicates if the model is a reasoning model.",
                                "examples": [
                                  "yes"
                                ],
                                "type": "string",
                                "enum": [
                                  "yes",
                                  "no",
                                  "optional"
                                ]
                              },
                              "tools_supported": {
                                "description": "Indicates if the model supports tools calls.",
                                "examples": [
                                  false
                                ],
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Human-readable name of the model.",
                                "examples": [
                                  "klusterai/Meta-Llama-3.1-405B-Instruct-Turbo"
                                ],
                                "type": "string"
                              },
                              "description": {
                                "description": "Brief explanation of what the model does or its purpose.",
                                "examples": [
                                  "A lightweight, fast language model optimized for chat."
                                ],
                                "type": "string"
                              },
                              "context_length": {
                                "description": "Token size of the context.",
                                "examples": [
                                  8000
                                ],
                                "type": "number"
                              },
                              "output_length": {
                                "description": "Token size of the ouput.",
                                "examples": [
                                  1024
                                ],
                                "type": "number"
                              },
                              "pricing": {
                                "type": "object",
                                "properties": {
                                  "realtime": {
                                    "type": "object",
                                    "properties": {
                                      "input": {
                                        "description": "Cost per input token in USD.",
                                        "examples": [
                                          0.0004
                                        ],
                                        "type": "number"
                                      },
                                      "output": {
                                        "description": "Cost per output token in USD.",
                                        "examples": [
                                          0.0008
                                        ],
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "input",
                                      "output"
                                    ]
                                  },
                                  "asynchronous": {
                                    "type": "object",
                                    "properties": {
                                      "asap": {
                                        "type": "object",
                                        "properties": {
                                          "input": {
                                            "description": "Cost per input token in USD.",
                                            "examples": [
                                              0.0004
                                            ],
                                            "type": "number"
                                          },
                                          "output": {
                                            "description": "Cost per output token in USD.",
                                            "examples": [
                                              0.0008
                                            ],
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "input",
                                          "output"
                                        ]
                                      },
                                      "1h": {
                                        "type": "object",
                                        "properties": {
                                          "input": {
                                            "description": "Cost per input token in USD.",
                                            "examples": [
                                              0.0004
                                            ],
                                            "type": "number"
                                          },
                                          "output": {
                                            "description": "Cost per output token in USD.",
                                            "examples": [
                                              0.0008
                                            ],
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "input",
                                          "output"
                                        ]
                                      },
                                      "3h": {
                                        "type": "object",
                                        "properties": {
                                          "input": {
                                            "description": "Cost per input token in USD.",
                                            "examples": [
                                              0.0004
                                            ],
                                            "type": "number"
                                          },
                                          "output": {
                                            "description": "Cost per output token in USD.",
                                            "examples": [
                                              0.0008
                                            ],
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "input",
                                          "output"
                                        ]
                                      },
                                      "6h": {
                                        "type": "object",
                                        "properties": {
                                          "input": {
                                            "description": "Cost per input token in USD.",
                                            "examples": [
                                              0.0004
                                            ],
                                            "type": "number"
                                          },
                                          "output": {
                                            "description": "Cost per output token in USD.",
                                            "examples": [
                                              0.0008
                                            ],
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "input",
                                          "output"
                                        ]
                                      },
                                      "12h": {
                                        "type": "object",
                                        "properties": {
                                          "input": {
                                            "description": "Cost per input token in USD.",
                                            "examples": [
                                              0.0004
                                            ],
                                            "type": "number"
                                          },
                                          "output": {
                                            "description": "Cost per output token in USD.",
                                            "examples": [
                                              0.0008
                                            ],
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "input",
                                          "output"
                                        ]
                                      },
                                      "24h": {
                                        "type": "object",
                                        "properties": {
                                          "input": {
                                            "description": "Cost per input token in USD.",
                                            "examples": [
                                              0.0004
                                            ],
                                            "type": "number"
                                          },
                                          "output": {
                                            "description": "Cost per output token in USD.",
                                            "examples": [
                                              0.0008
                                            ],
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "input",
                                          "output"
                                        ]
                                      },
                                      "48h": {
                                        "type": "object",
                                        "properties": {
                                          "input": {
                                            "description": "Cost per input token in USD.",
                                            "examples": [
                                              0.0004
                                            ],
                                            "type": "number"
                                          },
                                          "output": {
                                            "description": "Cost per output token in USD.",
                                            "examples": [
                                              0.0008
                                            ],
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "input",
                                          "output"
                                        ]
                                      },
                                      "72h": {
                                        "type": "object",
                                        "properties": {
                                          "input": {
                                            "description": "Cost per input token in USD.",
                                            "examples": [
                                              0.0004
                                            ],
                                            "type": "number"
                                          },
                                          "output": {
                                            "description": "Cost per output token in USD.",
                                            "examples": [
                                              0.0008
                                            ],
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "input",
                                          "output"
                                        ]
                                      }
                                    }
                                  },
                                  "fineTunedRealtime": {
                                    "type": "object",
                                    "properties": {
                                      "input": {
                                        "description": "Cost per input token in USD.",
                                        "examples": [
                                          0.0004
                                        ],
                                        "type": "number"
                                      },
                                      "output": {
                                        "description": "Cost per output token in USD.",
                                        "examples": [
                                          0.0008
                                        ],
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "input",
                                      "output"
                                    ]
                                  },
                                  "fineTuningTraining": {
                                    "examples": [
                                      0.02
                                    ],
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "asynchronous"
                                ]
                              },
                              "limits": {
                                "type": "object",
                                "properties": {
                                  "concurrent_requests": {
                                    "description": "The number of possible concurrent requests.",
                                    "examples": [
                                      10
                                    ],
                                    "type": "number"
                                  },
                                  "max_async_queue_size": {
                                    "description": "The maximum number of items possible in the async queue.",
                                    "examples": [
                                      50
                                    ],
                                    "type": "number"
                                  },
                                  "request_limit": {
                                    "description": "Maximum number of requests allowed during a given time unit.",
                                    "examples": [
                                      400
                                    ],
                                    "type": "number"
                                  },
                                  "request_limit_time_unit": {
                                    "description": "The time unit use for request limit.",
                                    "examples": [
                                      "minute"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "concurrent_requests",
                                  "max_async_queue_size",
                                  "request_limit",
                                  "request_limit_time_unit"
                                ]
                              },
                              "model_type": {
                                "description": "The category or type of the model (e.g., AI, ML, statistical).",
                                "examples": [
                                  "AI"
                                ],
                                "type": "string",
                                "enum": [
                                  "reference",
                                  "fineTuned"
                                ]
                              },
                              "model_purpose": {
                                "description": "The intended use case or function of the model.",
                                "examples": [
                                  "text-generation"
                                ],
                                "type": "string",
                                "enum": [
                                  "text",
                                  "audio",
                                  "multimodal",
                                  "code",
                                  "embeddings",
                                  "judge",
                                  "verify"
                                ]
                              },
                              "status": {
                                "description": "Current lifecycle status of the model (e.g., active, deprecated, unavailable).",
                                "examples": [
                                  "active"
                                ],
                                "type": "string",
                                "enum": [
                                  "existing",
                                  "upcoming"
                                ]
                              },
                              "image_url": {
                                "description": "URL address for hosting model image.",
                                "examples": [
                                  "https://example.com/images/gpt-3.5.png"
                                ],
                                "type": "string"
                              },
                              "deleted": {
                                "description": "Confirms model was successfully deleted.",
                                "default": false,
                                "examples": [
                                  false
                                ],
                                "type": "boolean"
                              },
                              "tags": {
                                "examples": [
                                  [
                                    "chat",
                                    "lightweight"
                                  ]
                                ],
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "up_votes": {
                                "description": "Number of up votes for model.",
                                "default": 0,
                                "examples": [
                                  250
                                ],
                                "type": "number"
                              },
                              "down_votes": {
                                "description": "Number of down votes for model.",
                                "examples": [
                                  10
                                ],
                                "type": "number"
                              },
                              "has_voted": {
                                "type": "object",
                                "properties": {
                                  "voteType": {
                                    "examples": [
                                      "up"
                                    ],
                                    "type": "string",
                                    "enum": [
                                      "up",
                                      "down"
                                    ]
                                  }
                                },
                                "required": [
                                  "voteType"
                                ]
                              },
                              "default": {
                                "description": "Represents if this is default model for playground requests",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "internal_model_id",
                              "object",
                              "created",
                              "owned_by",
                              "reasoning_model",
                              "tools_supported",
                              "name",
                              "description",
                              "context_length",
                              "output_length",
                              "model_type",
                              "model_purpose",
                              "status",
                              "deleted",
                              "tags",
                              "up_votes",
                              "default"
                            ]
                          }
                        }
                      },
                      "required": [
                        "object",
                        "data"
                      ]
                    },
                    {
                      "description": "List of available models.",
                      "type": "object",
                      "properties": {
                        "object": {
                          "description": "Indicates the type of response object (e.g., 'list').",
                          "examples": [
                            "list"
                          ],
                          "type": "string"
                        },
                        "data": {
                          "description": "Array of available models with their metadata.",
                          "examples": [
                            {
                              "id": "model_abc123",
                              "object": "model",
                              "created": 1711234567,
                              "owned_by": "org_456def",
                              "deleted": false
                            },
                            {
                              "id": "model_xyz789",
                              "object": "model",
                              "created": 1711240000,
                              "owned_by": "org_789ghi",
                              "deleted": true
                            }
                          ],
                          "type": "array",
                          "items": {
                            "description": "Basic metadata for an available model.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Unique identifier for the model.",
                                "examples": [
                                  "model_abc123"
                                ],
                                "type": "string"
                              },
                              "object": {
                                "description": "Indicates this object represents a model.",
                                "examples": [
                                  "model"
                                ],
                                "type": "string",
                                "enum": [
                                  "model"
                                ]
                              },
                              "created": {
                                "description": "Timestamp when the model was created (Unix timestamp in seconds).",
                                "examples": [
                                  1711234567
                                ],
                                "type": "number"
                              },
                              "owned_by": {
                                "description": "Identifier of the entity or user who owns this model.",
                                "examples": [
                                  "org_456def"
                                ],
                                "type": "string"
                              },
                              "deleted": {
                                "description": "Indicates whether the model has been deleted.",
                                "examples": [
                                  false
                                ],
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "created",
                              "owned_by"
                            ]
                          }
                        }
                      },
                      "required": [
                        "object",
                        "data"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/models/{id}": {
      "get": {
        "tags": [
          "Models"
        ],
        "description": "Get model.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "meta-llama/Meta-Llama-3.1-8B-Instruct",
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier for the model."
          }
        ],
        "responses": {
          "200": {
            "description": "Basic metadata for an available model.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Basic metadata for an available model.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the model.",
                      "type": "string",
                      "example": "model_abc123"
                    },
                    "object": {
                      "description": "Indicates this object represents a model.",
                      "type": "string",
                      "enum": [
                        "model"
                      ],
                      "example": "model"
                    },
                    "created": {
                      "description": "Timestamp when the model was created (Unix timestamp in seconds).",
                      "type": "number",
                      "example": 1711234567
                    },
                    "owned_by": {
                      "description": "Identifier of the entity or user who owns this model.",
                      "type": "string",
                      "example": "org_456def"
                    },
                    "deleted": {
                      "description": "Indicates whether the model has been deleted.",
                      "type": "boolean",
                      "example": false
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "created",
                    "owned_by"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Models"
        ],
        "description": "Delete model.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "meta-llama/Meta-Llama-3.1-8B-Instruct",
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier for the model."
          }
        ],
        "responses": {
          "200": {
            "description": "Basic metadata for an available model.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Basic metadata for an available model.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the model.",
                      "type": "string",
                      "example": "model_abc123"
                    },
                    "object": {
                      "description": "Indicates this object represents a model.",
                      "type": "string",
                      "enum": [
                        "model"
                      ],
                      "example": "model"
                    },
                    "created": {
                      "description": "Timestamp when the model was created (Unix timestamp in seconds).",
                      "type": "number",
                      "example": 1711234567
                    },
                    "owned_by": {
                      "description": "Identifier of the entity or user who owns this model.",
                      "type": "string",
                      "example": "org_456def"
                    },
                    "deleted": {
                      "description": "Indicates whether the model has been deleted.",
                      "type": "boolean",
                      "example": false
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "created",
                    "owned_by"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/completions": {
      "post": {
        "tags": [
          "Realtime"
        ],
        "description": "Submit chat completions request.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "messages": {
                    "description": "Array of messages forming the conversation history.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Chat completion message.",
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": [
                            "assistant",
                            "function",
                            "tool",
                            "user"
                          ],
                          "description": "Role of the message sender."
                        },
                        "content": {
                          "description": "Content of a chat message, either as an array of blocks (text or image) or a simple string.",
                          "examples": [
                            "This is a quick reply message."
                          ],
                          "anyOf": [
                            {
                              "minItems": 0,
                              "description": "Array of content blocks (text or image).",
                              "examples": [
                                [
                                  {
                                    "type": "text",
                                    "text": "Here is the information you requested:"
                                  },
                                  {
                                    "type": "image_url",
                                    "image_url": {
                                      "url": "https://example.com/image.png"
                                    }
                                  }
                                ]
                              ],
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Indicates the content is text.",
                                        "examples": [
                                          "text"
                                        ],
                                        "type": "string",
                                        "enum": [
                                          "text"
                                        ]
                                      },
                                      "text": {
                                        "description": "The text content of the message.",
                                        "examples": [
                                          "Hello! How can I assist you today?"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "text"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Indicates the content is an image URL.",
                                        "examples": [
                                          "image_url"
                                        ],
                                        "type": "string",
                                        "enum": [
                                          "image_url"
                                        ]
                                      },
                                      "image_url": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "description": "URL of the image.",
                                            "examples": [
                                              "https://example.com/image.png"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "url"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "image_url"
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "description": "Simple text content as a single string.",
                              "examples": [
                                "This is a quick reply message."
                              ],
                              "type": "string"
                            }
                          ]
                        },
                        "name": {
                          "anyOf": [
                            {
                              "description": "Optional name associated with the message.",
                              "examples": [
                                "System Prompt"
                              ],
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "tool_calls": {
                          "anyOf": [
                            {
                              "description": "Optional array of tool calls made by the assistant.",
                              "type": "array",
                              "items": {
                                "description": "Details of a tool call made during an assistant message.",
                                "examples": [
                                  {
                                    "index": 0,
                                    "id": "tool_call_abc123",
                                    "call_type": "function",
                                    "type": "function",
                                    "function": {
                                      "name": "getWeather",
                                      "arguments": {
                                        "location": "New York",
                                        "unit": "Celsius"
                                      }
                                    }
                                  }
                                ],
                                "type": "object",
                                "properties": {
                                  "index": {
                                    "anyOf": [
                                      {
                                        "description": "Index of the tool call in the list, starting from 0.",
                                        "examples": [
                                          0
                                        ],
                                        "type": "number"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "id": {
                                    "anyOf": [
                                      {
                                        "anyOf": [
                                          {
                                            "description": "Unique identifier for the tool call.",
                                            "examples": [
                                              "tool_call_abc123"
                                            ],
                                            "type": "string"
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "call_type": {
                                    "anyOf": [
                                      {
                                        "description": "Type of the call made to the tool.",
                                        "examples": [
                                          "function"
                                        ],
                                        "type": "string"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "type": {
                                    "description": "Indicates the type of tool call.",
                                    "examples": [
                                      "function"
                                    ],
                                    "type": "string"
                                  },
                                  "function": {
                                    "description": "Function call details associated with a tool call.",
                                    "examples": [
                                      {
                                        "name": "getWeather",
                                        "arguments": "{\"location\": \"New York\", \"unit\": \"Celsius\"}"
                                      }
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Name of the function being called.",
                                        "examples": [
                                          "getWeather"
                                        ],
                                        "type": "string"
                                      },
                                      "arguments": {
                                        "description": "Serialized JSON string of the function arguments.",
                                        "examples": [
                                          "{\"location\": \"New York\", \"unit\": \"Celsius\"}"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "arguments"
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "function"
                                ]
                              }
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "function_call": {
                          "anyOf": [
                            {
                              "description": "Optional function call details."
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "audio": {
                          "anyOf": [
                            {
                              "description": "Optional audio response data."
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "refusal": {
                          "anyOf": [
                            {
                              "description": "Optional refusal reason if the assistant declined to answer.",
                              "examples": [
                                "I'm sorry, I can't help with that request."
                              ],
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "tool_call_id": {
                          "description": "Unique identifier for the tool call.",
                          "examples": [
                            "tool_call_abc123"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "content",
                        "role",
                        "tool_call_id"
                      ]
                    }
                  },
                  "model": {
                    "description": "The model ID to use for chat completion.",
                    "type": "string"
                  },
                  "store": {
                    "anyOf": [
                      {
                        "description": "Whether to store the request and response for future retrieval.",
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {},
                        "type": "object",
                        "properties": {
                          "@kluster.ai": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "callback_url": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "async": {
                                    "anyOf": [
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "strict_completion_window": {
                                    "anyOf": [
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "completion_window": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "frequency_penalty": {
                    "anyOf": [
                      {
                        "description": "Penalizes new tokens based on frequency in prior responses.",
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "logit_bias": {
                    "anyOf": [
                      {
                        "description": "Modifies token probabilities, increasing or decreasing likelihood.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "number"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "logprobs": {
                    "anyOf": [
                      {
                        "description": "Includes log probabilities of tokens in response if set to true.",
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "top_logprobs": {
                    "anyOf": [
                      {
                        "description": "Number of most likely tokens to return log probabilities for.",
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "max_tokens": {
                    "anyOf": [
                      {
                        "minimum": 1,
                        "description": "The maximum number of tokens to generate in the chat completion.",
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "max_completion_tokens": {
                    "anyOf": [
                      {
                        "minimum": 1,
                        "description": "The maximum number of tokens allowed for the model\u2019s response.",
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "n": {
                    "anyOf": [
                      {
                        "description": "Number of completions to generate per prompt.",
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "modalities": {
                    "anyOf": [
                      {
                        "description": "Specifies input modalities like 'text', 'audio', etc.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "audio": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "voice": {
                            "type": "string"
                          },
                          "format": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "voice",
                          "format"
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "presence_penalty": {
                    "anyOf": [
                      {
                        "description": "Encourages or discourages new topics in responses.",
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "response_format": {
                    "anyOf": [
                      {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "text"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "json_object"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "json_schema"
                                ]
                              },
                              "json_schema": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "schema": {
                                    "anyOf": [
                                      {},
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "strict": {
                                    "anyOf": [
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "json_schema"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "seed": {
                    "anyOf": [
                      {
                        "description": "Random seed for deterministic outputs.",
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "service_tier": {
                    "anyOf": [
                      {
                        "description": "Indicates the service tier of the request.",
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "stop": {
                    "anyOf": [
                      {
                        "description": "Sequences that signal the model to stop generating.",
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "stream": {
                    "anyOf": [
                      {
                        "description": "Enables streaming responses when true.",
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "stream_options": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "include_usage": {
                            "anyOf": [
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "temperature": {
                    "anyOf": [
                      {
                        "description": "Controls randomness; higher values make responses more creative.",
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "top_p": {
                    "anyOf": [
                      {
                        "description": "Top-p nucleus sampling threshold.",
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "min_p": {
                    "anyOf": [
                      {
                        "minimum": 0,
                        "maximum": 1,
                        "description": "Minimum probability for token inclusion in sampling.",
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "repetition_penalty": {
                    "anyOf": [
                      {
                        "minimum": 0,
                        "description": "Discourages word repetition in responses.",
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "tools": {
                    "anyOf": [
                      {
                        "description": "Array of tools available for function calling.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "parameters": {}
                              },
                              "required": [
                                "name",
                                "parameters"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "function"
                          ]
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "tool_choice": {
                    "anyOf": [
                      {
                        "description": "Defines how tools should be selected for function calls.",
                        "anyOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "enum": [
                              "none"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "auto"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "required"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Specific tool to invoke.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "function"
                                ]
                              },
                              "function": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "function"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "parallel_tool_calls": {
                    "anyOf": [
                      {
                        "description": "Allows multiple tool calls simultaneously if true.",
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "user": {
                    "anyOf": [
                      {
                        "description": "Identifier of the user making the request.",
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "klusterai_trace_id": {
                    "anyOf": [
                      {
                        "description": "Trace ID for request tracking in kluster.ai.",
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "klusterai_batch_trace_id": {
                    "anyOf": [
                      {
                        "description": "Batch trace ID for grouping related requests.",
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "uiRequest": {
                    "anyOf": [
                      {
                        "description": "Indicates whether the request was triggered from the UI.",
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "localIp": {
                    "anyOf": [
                      {
                        "description": "Local IP address of the requesting client.",
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "messages",
                  "model"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v1/uploads": {
      "post": {
        "tags": [
          "Files"
        ],
        "description": "Creates an upload.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filename": {
                    "description": "Name of the file to upload.",
                    "type": "string",
                    "example": "myfile-123"
                  },
                  "purpose": {
                    "description": "Purpose of the upload",
                    "type": "string",
                    "example": "batch"
                  },
                  "bytes": {
                    "description": "File size in bytes.",
                    "type": "number",
                    "example": 34905
                  },
                  "mime_type": {
                    "description": "MIME type of the file.",
                    "type": "string",
                    "example": "text/plain"
                  }
                },
                "required": [
                  "filename",
                  "purpose",
                  "bytes",
                  "mime_type"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response object containing upload details.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response object containing upload details.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the upload.",
                      "type": "string",
                      "example": "upload_abc123"
                    },
                    "object": {
                      "description": "Indicates this is an upload object.",
                      "type": "string",
                      "enum": [
                        "upload"
                      ],
                      "example": "upload"
                    },
                    "bytes": {
                      "description": "File size in bytes.",
                      "type": "number",
                      "example": 349200
                    },
                    "created_at": {
                      "description": "Timestamp indicating when the upload was created.",
                      "type": "integer",
                      "example": 1711234567
                    },
                    "filename": {
                      "description": "Name of the file",
                      "type": "string",
                      "example": "my-cool-image.png"
                    },
                    "status": {
                      "description": "Upload status",
                      "type": "string",
                      "example": "completed"
                    },
                    "expires_at": {
                      "description": "Timestamp indicating when the upload is expiring.",
                      "type": "integer",
                      "example": 1712234567
                    },
                    "file": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Unique identifier for the file.",
                          "type": "string"
                        },
                        "object": {
                          "description": "Indicates this is a file object.",
                          "type": "string"
                        },
                        "bytes": {
                          "description": "Size of the file in bytes.",
                          "type": "number"
                        },
                        "created_at": {
                          "description": "Timestamp when the file was created.",
                          "type": "number"
                        },
                        "filename": {
                          "description": "Original name of the uploaded file.",
                          "type": "string"
                        },
                        "purpose": {
                          "description": "Purpose of the file within the system.",
                          "type": "string",
                          "enum": [
                            "assistants",
                            "vision",
                            "batch",
                            "batch_output",
                            "fine-tune",
                            "fine-tune-results"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "created_at",
                        "filename",
                        "purpose"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "bytes",
                    "created_at",
                    "filename",
                    "status",
                    "expires_at"
                  ]
                },
                "example": {
                  "id": "upload_abc123",
                  "object": "upload",
                  "bytes": 349210,
                  "created_at": 1711234567,
                  "filename": "my-cool-image.png",
                  "status": "completed",
                  "expires_at": 1712234567,
                  "file": {
                    "id": "file_abc123",
                    "object": "file",
                    "bytes": 349210,
                    "created_at": 1711234567,
                    "filename": "my-cool-image.png",
                    "purpose": "assistants"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/uploads/{uploadId}/parts": {
      "post": {
        "tags": [
          "Files"
        ],
        "description": "Adds part to an upload.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "format": "object-id",
                  "description": "Unique identifier for the upload.",
                  "examples": [
                    "myupload_123"
                  ],
                  "type": "string"
                },
                {}
              ]
            },
            "example": "myupload_123",
            "in": "path",
            "name": "uploadId",
            "required": true,
            "description": "Unique identifier for the upload."
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing the created upload part details.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response object containing the created upload part details.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the upload part.",
                      "type": "string",
                      "example": "part_def456"
                    },
                    "object": {
                      "description": "Indicates this is an upload part object.",
                      "type": "string",
                      "enum": [
                        "upload.part"
                      ],
                      "example": "upload.part"
                    },
                    "created_at": {
                      "description": "Timestamp indicating when the upload chunk created.",
                      "type": "integer",
                      "example": 1711234567
                    },
                    "upload_id": {
                      "description": "Upload id",
                      "type": "string",
                      "example": "upload_abc123"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "created_at",
                    "upload_id"
                  ]
                },
                "example": {
                  "id": "part_def456",
                  "object": "upload.part",
                  "created_at": 1711234567,
                  "upload_id": "upload_abc123"
                }
              }
            }
          }
        }
      }
    },
    "/v1/uploads/{uploadId}/complete": {
      "post": {
        "tags": [
          "Files"
        ],
        "description": "Completes an upload.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Request body for completing an upload.",
                "type": "object",
                "properties": {
                  "part_ids": {
                    "description": "List of part IDs that make up the upload.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "part_def456",
                      "part_ghi789"
                    ]
                  },
                  "md5": {
                    "description": "Optional MD5 checksum of the completed file for integrity verification.",
                    "type": "string",
                    "example": "d41d8cd98f00b204e9800998ecf8427e"
                  }
                },
                "required": [
                  "part_ids"
                ]
              },
              "example": {
                "part_ids": [
                  "part_def456",
                  "part_ghi789"
                ],
                "md5": "d41d8cd98f00b204e9800998ecf8427e"
              }
            }
          },
          "required": true,
          "description": "Request body for completing an upload."
        },
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "format": "object-id",
                  "description": "Unique identifier for the upload.",
                  "examples": [
                    "upload_abc123"
                  ],
                  "type": "string"
                },
                {}
              ]
            },
            "example": "upload_abc123",
            "in": "path",
            "name": "uploadId",
            "required": true,
            "description": "Unique identifier for the upload."
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing upload details.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response object containing upload details.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the upload.",
                      "type": "string",
                      "example": "upload_abc123"
                    },
                    "object": {
                      "description": "Indicates this is an upload object.",
                      "type": "string",
                      "enum": [
                        "upload"
                      ],
                      "example": "upload"
                    },
                    "bytes": {
                      "description": "File size in bytes.",
                      "type": "number",
                      "example": 349200
                    },
                    "created_at": {
                      "description": "Timestamp indicating when the upload was created.",
                      "type": "integer",
                      "example": 1711234567
                    },
                    "filename": {
                      "description": "Name of the file",
                      "type": "string",
                      "example": "my-cool-image.png"
                    },
                    "status": {
                      "description": "Upload status",
                      "type": "string",
                      "example": "completed"
                    },
                    "expires_at": {
                      "description": "Timestamp indicating when the upload is expiring.",
                      "type": "integer",
                      "example": 1712234567
                    },
                    "file": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Unique identifier for the file.",
                          "type": "string"
                        },
                        "object": {
                          "description": "Indicates this is a file object.",
                          "type": "string"
                        },
                        "bytes": {
                          "description": "Size of the file in bytes.",
                          "type": "number"
                        },
                        "created_at": {
                          "description": "Timestamp when the file was created.",
                          "type": "number"
                        },
                        "filename": {
                          "description": "Original name of the uploaded file.",
                          "type": "string"
                        },
                        "purpose": {
                          "description": "Purpose of the file within the system.",
                          "type": "string",
                          "enum": [
                            "assistants",
                            "vision",
                            "batch",
                            "batch_output",
                            "fine-tune",
                            "fine-tune-results"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "created_at",
                        "filename",
                        "purpose"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "bytes",
                    "created_at",
                    "filename",
                    "status",
                    "expires_at"
                  ]
                },
                "example": {
                  "id": "upload_abc123",
                  "object": "upload",
                  "bytes": 349210,
                  "created_at": 1711234567,
                  "filename": "my-cool-image.png",
                  "status": "completed",
                  "expires_at": 1712234567,
                  "file": {
                    "id": "file_abc123",
                    "object": "file",
                    "bytes": 349210,
                    "created_at": 1711234567,
                    "filename": "my-cool-image.png",
                    "purpose": "assistants"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/uploads/{uploadId}/cancel": {
      "post": {
        "tags": [
          "Files"
        ],
        "description": "Cancels an upload",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "format": "object-id",
                  "description": "Unique identifier for the upload.",
                  "examples": [
                    "upload_abc123"
                  ],
                  "type": "string"
                },
                {}
              ]
            },
            "example": "upload_abc123",
            "in": "path",
            "name": "uploadId",
            "required": true,
            "description": "Unique identifier for the upload."
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing upload details.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response object containing upload details.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the upload.",
                      "type": "string",
                      "example": "upload_abc123"
                    },
                    "object": {
                      "description": "Indicates this is an upload object.",
                      "type": "string",
                      "enum": [
                        "upload"
                      ],
                      "example": "upload"
                    },
                    "bytes": {
                      "description": "File size in bytes.",
                      "type": "number",
                      "example": 349200
                    },
                    "created_at": {
                      "description": "Timestamp indicating when the upload was created.",
                      "type": "integer",
                      "example": 1711234567
                    },
                    "filename": {
                      "description": "Name of the file",
                      "type": "string",
                      "example": "my-cool-image.png"
                    },
                    "status": {
                      "description": "Upload status",
                      "type": "string",
                      "example": "completed"
                    },
                    "expires_at": {
                      "description": "Timestamp indicating when the upload is expiring.",
                      "type": "integer",
                      "example": 1712234567
                    },
                    "file": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Unique identifier for the file.",
                          "type": "string"
                        },
                        "object": {
                          "description": "Indicates this is a file object.",
                          "type": "string"
                        },
                        "bytes": {
                          "description": "Size of the file in bytes.",
                          "type": "number"
                        },
                        "created_at": {
                          "description": "Timestamp when the file was created.",
                          "type": "number"
                        },
                        "filename": {
                          "description": "Original name of the uploaded file.",
                          "type": "string"
                        },
                        "purpose": {
                          "description": "Purpose of the file within the system.",
                          "type": "string",
                          "enum": [
                            "assistants",
                            "vision",
                            "batch",
                            "batch_output",
                            "fine-tune",
                            "fine-tune-results"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "created_at",
                        "filename",
                        "purpose"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "bytes",
                    "created_at",
                    "filename",
                    "status",
                    "expires_at"
                  ]
                },
                "example": {
                  "id": "upload_abc123",
                  "object": "upload",
                  "bytes": 349210,
                  "created_at": 1711234567,
                  "filename": "my-cool-image.png",
                  "status": "completed",
                  "expires_at": 1712234567,
                  "file": {
                    "id": "file_abc123",
                    "object": "file",
                    "bytes": 349210,
                    "created_at": 1711234567,
                    "filename": "my-cool-image.png",
                    "purpose": "assistants"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/verify/reliability": {
      "post": {
        "tags": [
          "Realtime"
        ],
        "description": "kluster verify judge for LLM reliability. Submits hallucination detection request.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Hallucination detection input",
                "anyOf": [
                  {
                    "description": "Input in simple form of question and answer",
                    "type": "object",
                    "properties": {
                      "prompt": {
                        "description": "Input prompt for hallucination check",
                        "minLength": 1,
                        "type": "string"
                      },
                      "output": {
                        "description": "Output for for hallucination check",
                        "minLength": 1,
                        "type": "string"
                      },
                      "context": {
                        "description": "Contex for the provided question",
                        "type": "string"
                      },
                      "return_search_results": {
                        "description": "Return search results in response",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "prompt",
                      "output"
                    ]
                  },
                  {
                    "description": "Input in chat completions format",
                    "type": "object",
                    "properties": {
                      "messages": {
                        "description": "Array of messages forming the conversation history.",
                        "minItems": 2,
                        "type": "array",
                        "items": {
                          "description": "Chat completion message representing system, user, assistant, tool, or function messages.",
                          "examples": [
                            {
                              "role": "user",
                              "content": "What is the weather today?",
                              "name": "User"
                            }
                          ],
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "role": {
                                  "description": "Role of the message sender.",
                                  "examples": [
                                    "system"
                                  ],
                                  "type": "string",
                                  "enum": [
                                    "system",
                                    "developer"
                                  ]
                                },
                                "content": {
                                  "description": "Content of a chat message, either as an array of blocks (text or image) or a simple string.",
                                  "examples": [
                                    "This is a quick reply message."
                                  ],
                                  "anyOf": [
                                    {
                                      "minItems": 0,
                                      "description": "Array of content blocks (text or image).",
                                      "examples": [
                                        [
                                          {
                                            "type": "text",
                                            "text": "Here is the information you requested:"
                                          },
                                          {
                                            "type": "image_url",
                                            "image_url": {
                                              "url": "https://example.com/image.png"
                                            }
                                          }
                                        ]
                                      ],
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "description": "Indicates the content is text.",
                                                "examples": [
                                                  "text"
                                                ],
                                                "type": "string",
                                                "enum": [
                                                  "text"
                                                ]
                                              },
                                              "text": {
                                                "description": "The text content of the message.",
                                                "examples": [
                                                  "Hello! How can I assist you today?"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "text"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "description": "Indicates the content is an image URL.",
                                                "examples": [
                                                  "image_url"
                                                ],
                                                "type": "string",
                                                "enum": [
                                                  "image_url"
                                                ]
                                              },
                                              "image_url": {
                                                "type": "object",
                                                "properties": {
                                                  "url": {
                                                    "description": "URL of the image.",
                                                    "examples": [
                                                      "https://example.com/image.png"
                                                    ],
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "image_url"
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "description": "Simple text content as a single string.",
                                      "examples": [
                                        "This is a quick reply message."
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                },
                                "name": {
                                  "anyOf": [
                                    {
                                      "description": "Optional name associated with the message.",
                                      "examples": [
                                        "System Prompt"
                                      ],
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "role",
                                "content"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "role": {
                                  "description": "Message sent by the end user.",
                                  "examples": [
                                    "user"
                                  ],
                                  "type": "string",
                                  "enum": [
                                    "user"
                                  ]
                                },
                                "content": {
                                  "description": "Content of a chat message, either as an array of blocks (text or image) or a simple string.",
                                  "examples": [
                                    "This is a quick reply message."
                                  ],
                                  "anyOf": [
                                    {
                                      "minItems": 0,
                                      "description": "Array of content blocks (text or image).",
                                      "examples": [
                                        [
                                          {
                                            "type": "text",
                                            "text": "Here is the information you requested:"
                                          },
                                          {
                                            "type": "image_url",
                                            "image_url": {
                                              "url": "https://example.com/image.png"
                                            }
                                          }
                                        ]
                                      ],
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "description": "Indicates the content is text.",
                                                "examples": [
                                                  "text"
                                                ],
                                                "type": "string",
                                                "enum": [
                                                  "text"
                                                ]
                                              },
                                              "text": {
                                                "description": "The text content of the message.",
                                                "examples": [
                                                  "Hello! How can I assist you today?"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "text"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "description": "Indicates the content is an image URL.",
                                                "examples": [
                                                  "image_url"
                                                ],
                                                "type": "string",
                                                "enum": [
                                                  "image_url"
                                                ]
                                              },
                                              "image_url": {
                                                "type": "object",
                                                "properties": {
                                                  "url": {
                                                    "description": "URL of the image.",
                                                    "examples": [
                                                      "https://example.com/image.png"
                                                    ],
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "image_url"
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "description": "Simple text content as a single string.",
                                      "examples": [
                                        "This is a quick reply message."
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                },
                                "name": {
                                  "anyOf": [
                                    {
                                      "description": "Optional name associated with the user message.",
                                      "examples": [
                                        "User"
                                      ],
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "role",
                                "content"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "role": {
                                  "description": "Message generated by the assistant.",
                                  "examples": [
                                    "assistant"
                                  ],
                                  "type": "string",
                                  "enum": [
                                    "assistant"
                                  ]
                                },
                                "content": {
                                  "anyOf": [
                                    {
                                      "description": "Content of a chat message, either as an array of blocks (text or image) or a simple string.",
                                      "examples": [
                                        "This is a quick reply message."
                                      ],
                                      "anyOf": [
                                        {
                                          "minItems": 0,
                                          "description": "Array of content blocks (text or image).",
                                          "examples": [
                                            [
                                              {
                                                "type": "text",
                                                "text": "Here is the information you requested:"
                                              },
                                              {
                                                "type": "image_url",
                                                "image_url": {
                                                  "url": "https://example.com/image.png"
                                                }
                                              }
                                            ]
                                          ],
                                          "type": "array",
                                          "items": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "description": "Indicates the content is text.",
                                                    "examples": [
                                                      "text"
                                                    ],
                                                    "type": "string",
                                                    "enum": [
                                                      "text"
                                                    ]
                                                  },
                                                  "text": {
                                                    "description": "The text content of the message.",
                                                    "examples": [
                                                      "Hello! How can I assist you today?"
                                                    ],
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "text"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "description": "Indicates the content is an image URL.",
                                                    "examples": [
                                                      "image_url"
                                                    ],
                                                    "type": "string",
                                                    "enum": [
                                                      "image_url"
                                                    ]
                                                  },
                                                  "image_url": {
                                                    "type": "object",
                                                    "properties": {
                                                      "url": {
                                                        "description": "URL of the image.",
                                                        "examples": [
                                                          "https://example.com/image.png"
                                                        ],
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "url"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "image_url"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "description": "Simple text content as a single string.",
                                          "examples": [
                                            "This is a quick reply message."
                                          ],
                                          "type": "string"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "name": {
                                  "anyOf": [
                                    {
                                      "description": "Optional name associated with the assistant.",
                                      "examples": [
                                        "Assistant"
                                      ],
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "tool_calls": {
                                  "anyOf": [
                                    {
                                      "description": "Optional array of tool calls made by the assistant.",
                                      "type": "array",
                                      "items": {
                                        "description": "Details of a tool call made during an assistant message.",
                                        "examples": [
                                          {
                                            "index": 0,
                                            "id": "tool_call_abc123",
                                            "call_type": "function",
                                            "type": "function",
                                            "function": {
                                              "name": "getWeather",
                                              "arguments": {
                                                "location": "New York",
                                                "unit": "Celsius"
                                              }
                                            }
                                          }
                                        ],
                                        "type": "object",
                                        "properties": {
                                          "index": {
                                            "anyOf": [
                                              {
                                                "description": "Index of the tool call in the list, starting from 0.",
                                                "examples": [
                                                  0
                                                ],
                                                "type": "number"
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ]
                                          },
                                          "id": {
                                            "anyOf": [
                                              {
                                                "anyOf": [
                                                  {
                                                    "description": "Unique identifier for the tool call.",
                                                    "examples": [
                                                      "tool_call_abc123"
                                                    ],
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "null"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ]
                                          },
                                          "call_type": {
                                            "anyOf": [
                                              {
                                                "description": "Type of the call made to the tool.",
                                                "examples": [
                                                  "function"
                                                ],
                                                "type": "string"
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ]
                                          },
                                          "type": {
                                            "description": "Indicates the type of tool call.",
                                            "examples": [
                                              "function"
                                            ],
                                            "type": "string"
                                          },
                                          "function": {
                                            "description": "Function call details associated with a tool call.",
                                            "examples": [
                                              {
                                                "name": "getWeather",
                                                "arguments": "{\"location\": \"New York\", \"unit\": \"Celsius\"}"
                                              }
                                            ],
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the function being called.",
                                                "examples": [
                                                  "getWeather"
                                                ],
                                                "type": "string"
                                              },
                                              "arguments": {
                                                "description": "Serialized JSON string of the function arguments.",
                                                "examples": [
                                                  "{\"location\": \"New York\", \"unit\": \"Celsius\"}"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "arguments"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "function"
                                        ]
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "function_call": {
                                  "anyOf": [
                                    {
                                      "description": "Optional function call details."
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "audio": {
                                  "anyOf": [
                                    {
                                      "description": "Optional audio response data."
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "refusal": {
                                  "anyOf": [
                                    {
                                      "description": "Optional refusal reason if the assistant declined to answer.",
                                      "examples": [
                                        "I'm sorry, I can't help with that request."
                                      ],
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "role"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "role": {
                                  "description": "Message from an external tool.",
                                  "examples": [
                                    "tool"
                                  ],
                                  "type": "string",
                                  "enum": [
                                    "tool"
                                  ]
                                },
                                "content": {
                                  "description": "Content of the tool message.",
                                  "examples": [
                                    "Tool execution result here."
                                  ],
                                  "type": "string"
                                },
                                "tool_call_id": {
                                  "description": "Unique identifier for the tool call.",
                                  "examples": [
                                    "tool_call_abc123"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "role",
                                "content",
                                "tool_call_id"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "role": {
                                  "description": "Message containing function execution results.",
                                  "examples": [
                                    "function"
                                  ],
                                  "type": "string",
                                  "enum": [
                                    "function"
                                  ]
                                },
                                "content": {
                                  "description": "Content returned by the function.",
                                  "examples": [
                                    "{\"result\": \"success\"}"
                                  ],
                                  "type": "string"
                                },
                                "name": {
                                  "anyOf": [
                                    {
                                      "description": "Optional name of the function.",
                                      "examples": [
                                        "getWeather"
                                      ],
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "role",
                                "content"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "messages"
                    ]
                  }
                ]
              }
            }
          },
          "description": "Hallucination detection input"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "is_hallucination": {
                      "description": "Hallucination detected",
                      "type": "boolean"
                    },
                    "explanation": {
                      "description": "Text explanation of the Hallucination",
                      "type": "string"
                    },
                    "usage": {
                      "type": "object",
                      "properties": {
                        "completion_tokens": {
                          "description": "Number of completion tokens",
                          "type": "number"
                        },
                        "prompt_tokens": {
                          "description": "Number of prompting tokens",
                          "type": "number"
                        },
                        "total_tokens": {
                          "description": "Total number of tokens",
                          "type": "number"
                        }
                      },
                      "required": [
                        "completion_tokens",
                        "prompt_tokens",
                        "total_tokens"
                      ]
                    },
                    "search_results": {
                      "type": "array",
                      "items": {
                        "description": "Search result used for hallucination fact check",
                        "type": "object",
                        "properties": {
                          "title": {
                            "description": "Title of search result item",
                            "type": "string"
                          },
                          "snippet": {
                            "description": "Snippet description",
                            "type": "string"
                          },
                          "link": {
                            "description": "Link of search result item",
                            "type": "string"
                          }
                        },
                        "required": [
                          "title"
                        ]
                      }
                    }
                  },
                  "required": [
                    "is_hallucination",
                    "usage"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/mcp": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v1/mcp/": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.kluster.ai",
      "description": "PRODUCTION server"
    }
  ],
  "tags": [
    {
      "name": "MCP",
      "description": "Model Context Protocol end-points"
    }
  ],
  "externalDocs": {
    "url": "https://docs.kluster.ai/",
    "description": "kluster.ai documentation"
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}